[{
  "title"    : "梦想清单",
  "content"	 : "  target = &#39;日日当精进 但求无愧&#39;  target = &#39;just do it&#39;      完成自己制定的读书计划，按照书单列表进行阅读；        长途骑行一次；        拥有六块腹肌和匀称的身材；        参加一次马拉松比赛；        每天坚持锻炼(在生活轨迹里面打卡吧，这里就不占地方了)；        去心仪的大学读书深造；        拥有自己的工作室；  ",
  "url"      : "/blog/2099/04/14/%E6%A2%A6%E6%83%B3%E6%B8%85%E5%8D%95.html"
},{
  "title"    : "CentOS下Nexus搭建Maven私库",
  "content"	 : "作者 : daodaoliang@yeah.net日期 : 2017-04-20版本 : 0.0.4[TOC]1. Maven私服简介搭建私服可以做什么？1、如果公司开发组的开发环境全部内网，这时如何连接到在互联网上的Maven中央仓库呢？2、如果公司经常开发一些公共的组件，如何共享给各个开发组，使用拷贝方式吗？如果这样，公共库升级了怎么办？当然可以解决的问题可能不止上面两点，下面来介绍在CentOS中搭建自己的Maven私服，使用Nexus。2. java 运行环境准备根据官网的介绍，运行环境最好是使用最新的8版本，官网文如下:Nexus Repository Manager requires a Java 8 Runtime Environment (JRE) from...",
  "url"      : "/blog/2017/04/20/CentOS%E4%B8%8BNexus%E6%90%AD%E5%BB%BAMaven%E7%A7%81%E5%BA%93.html"
},{
  "title"    : "CentOS6升级GCC版本",
  "content"	 : "作者 : daodaoliang@yeah.net日期 : 2017-04-20版本 : 0.0.1[TOC]1. 背景简述CentOS 6系列的服务器,默认的gcc编译器都是 4.4.7 版本,有事后为了开发或者编译其他开源软件，则需要对gcc编译器进行升级;2. 安装GCC前准备2.1 下载指定版本首先在官网上面下载你需要的GCC版本,官网在这里,笔者选择的是GCC 4.8.4版本;cd /usr/local/src wget http://ftp.gnu.org/gnu/gcc/gcc-4.8.4/gcc-4.8.4.tar.gz2.2 解压并进行准备工作tar zxvf gcc-4.8.4.tar.gz2.3...",
  "url"      : "/blog/2017/04/20/CentOS6%E5%8D%87%E7%BA%A7GCC%E7%89%88%E6%9C%AC.html"
},{
  "title"    : "CentOS6.8下安装Maven",
  "content"	 : "作者 : daodaoliang@yeah.net日期 : 2017-04-13版本 : 0.0.4[TOC]0. 安装Maven前准备 确保系统已经安装了Java的运行环境;# 查看java版本，确保已经安装了javajava -version终端输出如下内容说明已经安装了java，并且为 openJDK 系列的 1.7.0_131 版本[root@yafan2-xb src]# java -versionjava version &quot;1.7.0_131&quot;OpenJDK...",
  "url"      : "/blog/2017/04/14/CentOS6.8%E4%B8%8B%E5%AE%89%E8%A3%85Maven.html"
},{
  "title"    : "CentOS下搭建GitLab服务器",
  "content"	 : "作者 : daodaoliang@yeah.net日期 : 2017-04-13版本 : 0.0.4 0 Gitlab 简介 1. Gitlab 的安装 1.1 采用 Omnibus 方式 1.1.1 安装配置依赖项 1.1.2...",
  "url"      : "/blog/2017/04/13/Ubuntu14.04%E4%B8%8B%E9%85%8D%E7%BD%AEGitLab7.html"
},{
  "title"    : "windows下服务程序相关",
  "content"	 : "作者: daodaoliang 版本: V 0.0.1 日期: 2017年11月25日1. Windows Service 编程实现在windows平台下面编写 服务程序 免不了要去查看微软的开发者文档，相关的介绍在这里, 多了也就不在罗嗦了,如果你嫌弃直接用他们的API的话,可以使用别人已经封装好的，比如: 参考代码 连接 参考代码001 https://github.com/magicsih/WindowsService 参考代码002 https://github.com/Olster/windows_service 参考代码003...",
  "url"      : "/blog/2017/04/12/windows%E4%B8%8B%E9%9D%A2%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F%E7%9B%B8%E5%85%B3.html"
},{
  "title"    : "windows脚本UAC获取",
  "content"	 : "auther = &#39;daodaoliang&#39; version = &#39;V 0.0.1&#39; date = &#39;2017年04月12日&#39;常用的windows下面的脚本，首先判断用户的管理员权限，而后进行sc的服务操作;echo offcls:-------------------------------------REM --&amp;gt; Check for permissions&amp;gt;nul 2&amp;gt;&amp;amp;1 &quot;%SYSTEMROOT%system32cacls.exe&quot; &quot;%SYSTEMROOT%system32configsystem&quot;REM --&amp;gt; If...",
  "url"      : "/blog/2017/04/12/windowsUAC.html"
},{
  "title"    : "最为常用的HASH算法",
  "content"	 : "作者: daodaoliang 版本: V 0.0.1 日期: 2017年03月08日murmurhash2算法 和 DJB Hash算法是目前最流行的hash算法1.DJB HASH算法/* the famous DJB Hash Function for strings */unsigned int...",
  "url"      : "/blog/2017/03/08/HashAlgorithm.html"
},{
  "title"    : "CentOS6.5下升级NodeJs",
  "content"	 : "作者: daodaoliang版本: V 1.0.1邮箱：daodaoliang@yeah.netNodeJs 是什么就不在赘述，可一直接参考英文官网，或者中文官网，在项目中进行应用时，有时候需要用到最新版本的特性，但是CentOS系统为了稳定性，默认的源都是在该版本的操作系统发布时或者更新时的最稳定版本，所以仅仅是采用yum update 的操作是不能进行对应升级的。 所以下面采用两种方式来进行在线升级。0x01 用 n 模块来进行 nodejs 升级在 NodeJs 中有一个模块叫做 n 专门用来管理 NodeJs 的版本。 首先下载安装模块...",
  "url"      : "/blog/2017/02/17/CentOS%E4%B8%8B%E5%8D%87%E7%BA%A7NodeJs.html"
},{
  "title"    : "linux内核漫画(转载)",
  "content"	 : "作者: daodaoliang版本: V 0.0.1日期: 2017年02月06日网络上看到的觉得很形象就转载过来啦，伟大的Linux内核漫画化。",
  "url"      : "/blog/2017/02/06/linux%E5%86%85%E6%A0%B8%E6%BC%AB%E7%94%BB.html"
},{
  "title"    : "linux下C++的编译过程",
  "content"	 : "作者: daodaoliang版本: V 0.0.1日期: 2017年02月01日在linux下面c++程序从源码变成用户触手可用的可执行程序通常分为配置、编译和安装，具体的过程和描述如下.0x01 配置阶段(Configure)一个生产环境的系统一般都是需要调用一些系统提供的功能库和一些其他功能库，由于系统环境的不同编译器需要知道系统库存在哪里，软件编译完成后安装在哪里，需要安装那些第三方组件等等，同时工程项目的文件也存在相互的引用和依赖关系，所有这些都需要在configure阶段解决。配置阶段完成以后会产生makefile文件。0x02 编译阶段(Make)编译阶段的就是把程序工程文件从人类可读经过处理后变成机器可执行的二进制指令码的过程，对于linux 下面 gcc 编译器来说一般是预处理、编译、汇编和链接。0x021 预处理(Preprocessing)预处理后的文件一般为.i结尾，这个过程一般包含以下几个子过程: 展开宏定义，删除所有#define； 处理所有的条件预编译指令，#if #ifdef #elif #else #endif 等； 处理#include预编译指令，将被包含的文件插入到该预编译指令的位置； 删除所有的注释；...",
  "url"      : "/blog/2017/02/01/linux%E4%B8%8BC++%E7%9A%84%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B.html"
},{
  "title"    : "ssh超时时间设置",
  "content"	 : "作者: daodaoliang版本: V 0.0.1日期: 2016年12月29日0x00 OpenSSH 简介OpenSSH是采用SSH协议实现的重要的远程连接工具，它对所有的数据进行加密以防止被中途窃听，OpenSSH提供了大量的安全通道的组件，比如： 远程操作用ssh、scp、sftp; 秘钥管理用ssh-add、ssh-keysign、ssh-keyscan、ssh-keygen; 服务端包含sshd、sftp-server、ssh-agent;0x01 方案一上面的所有信息可以自行去对应官网链接进行进一步的学习，在下面只讨论对于sshd的超时连接的问题。 修改server端的配置文件/etc/ssh/sshd_config# server每隔60秒给客户端发送一次保活信息包给客户端ClientAliveInterval 60# server端发出的请求客户端没有回应的次数达到86400次的时候就断开连接，正常情况下客户端都会相应ClientAliveCountMax 86400 修改client端的配置文件/etc/ssh/ssh_config# client 每隔60秒给客户端发送一次保活信息包给客户端ServerAliveInterval 60#...",
  "url"      : "/blog/2016/12/29/ssh%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%E8%AE%BE%E7%BD%AE.html"
},{
  "title"    : "windows下获取系统信息VBS脚本",
  "content"	 : "作者: daodaoliang版本: V 0.0.1日期: 2016年11月25日&#39;********************************************************************&#39;* *&#39;* Begin of File *&#39;* *&#39;*******************************************************************On Error Resume NextConst forwriting=2Const forreading=1Dim oFSO,oF,eventlogText = &quot;此脚本运行不会对您的系统造成任何损害或恶意行为&quot; &amp;amp;VbCrLf&amp;amp;vbCrlf&amp;amp;...",
  "url"      : "/blog/2016/11/25/windows%E4%B8%8B%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AFVBS%E8%84%9A%E6%9C%AC.html"
},{
  "title"    : "清理linux登录和操作记录",
  "content"	 : "作者: daodaoliang版本: V 0.0.1日期: 2016年11月11日创建 clear.sh 脚本文件,内容如下#!/bin/shecho &amp;gt; /var/log/syslogecho &amp;gt; /var/log/messagesecho &amp;gt; /var/log/xferlog#echo &amp;gt; /var/log/httpd/access_log#echo &amp;gt; /var/log/httpd/error_logecho &amp;gt; /var/log/mysqld.logecho &amp;gt;...",
  "url"      : "/blog/2016/11/11/%E6%B8%85%E7%90%86%E7%99%BB%E5%BD%95%E5%92%8C%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95.html"
},{
  "title"    : "Qt开源项目说明",
  "content"	 : "作者: daodaoliang版本: V 0.0.3邮箱: daodaoliang@yeah.net在使用过程中有任何疑问可直接联系我，以后还会有其他组件开源，现有组件也会升级维护哒，QQ:88341189，没事也可以技术交流呀！0x00 基础UI组件集合(NBaseUiKit) 项目说明: Qt编写的基础UI组件集合，方便平时的组件定制等问题； 开源状态: 完全开源； 开源主页: http://daodaoliang.com/NBaseUiKit/0x01 常用功能公共组件集合(NCommon) 项目说明: Qt编写的常用功能组件集合，截屏、自动部署发布、数据转码等功能组件； 开源状态: 完全开源； 开源主页: http://daodaoliang.com/NCommon/；0x02 认证组件(NAuth)...",
  "url"      : "/blog/2016/11/04/Qt%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "supervisor 安装与配置",
  "content"	 : "作者: daodaoliang版本: V1.0.1邮箱： daodaoliang@yeah.net这里是官方链接0x00 supervisor 简介Supervisor 是一个用 python 语言开发的用来在 linux 系统下进行进程管理的工具。可以很方面的监控、启动、停止、重启一个或者多个进程。当进程意外终止时可以在第一时间进行重启，做到自动恢复。0x01 supervisor 安装1.确保 python 环境完备Note: Supervisor is known to work...",
  "url"      : "/blog/2016/11/02/Supervisor%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.html"
},{
  "title"    : "nginx 配置https并自签名证书",
  "content"	 : "作者: daodaoliang版本: V1.0.1邮箱： daodaoliang@yeah.net参考链接： 这里 和 这里 和 官方文档1. 制作服务器证书服务器CA私钥：openssl genrsa -des3 -out ca.key 2048制作解密后的CA私钥（一般无此必要）：openssl rsa -in ca.key -out ca_decrypted.keyca.crt...",
  "url"      : "/blog/2016/10/28/nginx%E9%85%8D%E7%BD%AEhttps%E5%B9%B6%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6.html"
},{
  "title"    : "常用的正则表达式",
  "content"	 : "原文出处: (http://www.jianshu.com/p/e7bb97218946)日期: 2016年9月28日版本: V1.0.1.0正则表达式，一个十分古老而又强大的文本处理工具，仅仅用一段非常简短的表达式语句，便能够快速实现一个非常复杂的业务逻辑。熟练地掌握正则表达式的话，能够使你的开发效率得到极大的提升。正则表达式经常被用于字段或任意字符串的校验，如下面这段校验基本日期格式的JavaScript代码：var reg = /^(d{1,4})(-|/)(d{1,2})2(d{1,2})$/; var r = fieldValue.match(reg); if(r==null)alert(&#39;Date format error!&#39;);1.校验密码强度密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。^(?=.*d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$2.校验中文字符串仅能是中文.^[u4e00-u9fa5]{0,}$3.由数字、26个英文字母或下划线组成的字符串^w+$4.校验E-Mail 地址[w!#$%&amp;amp;&#39;*+/=?^_`{|}~-]+(?:.[w!#$%&amp;amp;&#39;*+/=?^_`{|}~-]+)*@(?:[w](?:[w-]*[w])?.)+[w](?:[w-]*[w])?5.校验身份证号码下面是身份证号码的正则校验。15 或 18位。15位^[1-9]d{7}((0d)|(1[0-2]))(([0|1|2]d)|3[0-1])d{3}$18位^[1-9]d{5}[1-9]d{3}((0d)|(1[0-2]))(([0|1|2]d)|3[0-1])d{3}([0-9]|X)$6.校验日期“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$7.校验金额金额校验，精确到2位小数。^[0-9]+(.[0-9]{2})?$8.校验手机号下面是国内 13、15、18开头的手机号正则表达式。（可根据目前国内收集号扩展前两位开头号码）^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])d{8}$9.判断IE的版本IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式。^.*MSIE [5-8](?:.[0-9]+)?(?!.*Trident/[5-9].0).*$10.校验IP-v4地址IP4...",
  "url"      : "/blog/2016/09/28/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"
},{
  "title"    : "nginx 常用的配置",
  "content"	 : "安装请移步这里点击我1. nginx目录嵌套http { ....... include /etc/nginx/conf.d/*.conf; include sites/*.conf;}2. gzip on加到http模块中, 开启gzip, 注意gzip_types配置得是压缩的资源类型http { ..... gzip on; gzip_min_length 1k; gzip_comp_level 5;...",
  "url"      : "/blog/2016/09/20/nginx%E7%9A%84%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE.html"
},{
  "title"    : "10个值得前端收藏的CSS3动效库",
  "content"	 : "原文: http://www.jianshu.com/p/31118d83cb5f#版本: V1.0.1.0日期: 2016年9月28日现在的网站和App的设计中越来越重视用户体验，而优秀的动效则能使你的应用更具交互性，从而吸引更多用户的使用。如果你对CSS3中定义动效还不熟练，或希望采用更加简单直接的方式在你的应用中引入动效的话，你可以参考并使用下面的这10个优秀动效库（工具）。1.Animate.cssAnimate.css是我比较喜欢的一个CSS3动效库，非常适合那些对CSS3动画效果不熟悉，但又希望给自己所做的网站或基于H5的APP引入动效的朋友。因为，你只需要给需要实现动效的元素添加上Animate.css中预定义的那些动效名称就可以了。比如常见的：bounce，flash，fadeIn，fadeOut等等，加起来有75种不同的动效，完全能够满足你的基本需要了。当然对于这个库也有一些使用注意事项，比如你最好在给元素添加动效样式完成动效后，马上将这个动效样式去掉。另外，对于动效的时长，振动幅度等，你也需要做一些调整。因为，我感觉它默认设置中的动效过于快速和强烈了。Animate.css已经提供了详细的文档告诉你应该如何做这些调整。2.Bounce.jsBounce.js是一个能够生成CSS3动效的小工具，它是用JavaScript编写的，提供了一个Web界面，你可以添加一个组件然后就可以选择包括Scale，Translate，Rotate，Skew这些动效类型，然后分别设置它们的参数，当达到你想要的效果后，你可以将这个动效以CSS的方式导出，这样你就可以将它应用到你的应用中了。3.CSS3 AnimationCSS3 Animation是一个非常简单易用的动效工具，你可以在它提供的简单图形界面里，通过拖拽一些进度条来控制你的动效，生成的CSS代码会自动显示在下面的一个文本框里，你可以拷贝粘贴到你的应用中直接使用。4.CSS Animate如果你觉得上面的工具还无法做出你想要的动效，那么可以看看CSS Animate这个工具。它能让你设置更多的动效参数，比如你可以同时设置动效起始和终止状态的坐标，大小，以及透明度，这样你就能够做出更加复杂的动效来。5.Magic AnimationsMagic Animations与Animate.css十分类似，也是一个预定义了一系列动效的CSS库。但与Animate.css的最大区别可能是，它定义的那些动效更炫也更酷一些，如果你的网站也很新潮，那可以考虑使用这个CSS动效库。6.AniJSAniJS是一个通过JavaScript控制的动效库。它允许你通过它的链式语法来定义动效。比如下面这个例子：当用户点击时这个元素会沿Y轴翻转。&amp;lt;div data-anijs=&quot;if: click, do: flipInY, to: .container-box&quot;&amp;gt;&amp;lt;/div&amp;gt;7.Single Element CSS Spinners我们经常会需要一些动效来表达系统处于加载或处理数据的过程中。Single Element...",
  "url"      : "/blog/2016/09/18/10%E4%B8%AA%E5%80%BC%E5%BE%97%E5%89%8D%E7%AB%AF%E6%94%B6%E8%97%8F%E7%9A%84CSS3%E5%8A%A8%E6%95%88%E5%BA%93.html"
},{
  "title"    : "github上前端涉及的知识体系",
  "content"	 : "作者: daodaoliang版本: V1.0.1.0日期: 2016年9月18日原文出处在这里综合类 综合类 地址 前端知识体系 http://www.cnblogs.com/sb19871023/p/3894452.html 前端知识结构 https://github.com/JacksonTian/fks Web前端开发大系概览 https://github.com/unruledboy/WebFrontEndStack Web前端开发大系概览-中文版 http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html Web Front-end Stack v2.2 Web Front-end...",
  "url"      : "/blog/2016/09/18/github%E4%B8%8A%E5%89%8D%E7%AB%AF%E6%B6%89%E5%8F%8A%E7%9A%84%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB.html"
},{
  "title"    : "ssh-add 执行出错",
  "content"	 : "作者: daodaoliang版本: V 0.0.1日期: 2016年8月23日 Could not open a connection to your authentication agenty若执行ssh-add /path/to/xxx 时出现这个错误:Could not open a connection...",
  "url"      : "/blog/2016/08/23/ssh-add%E9%94%99%E8%AF%AF.html"
},{
  "title"    : "wget命令学习",
  "content"	 : "作者: daodaoliang时间: 2016年7月19日版本: 0.0.2Wget 的使用 支持断点下传功能; 同时支持FTP和HTTP下载方式; 支持代理服务器; 设置方便简单; 程序小，完全免费;命令格式：wget [参数列表] [目标软件、网页的网址]wget -r -p -np -k http://xxx.com/xxx-r, --recursive（递归） specify recursive...",
  "url"      : "/blog/2016/07/19/wget%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0.html"
},{
  "title"    : "Qt给应用程序添加版本信息",
  "content"	 : "作者:daodaoliang时间:2016年7月11日16:12:09版本:V 0.0.4邮箱:daodaoliang@yeah.net0. 环境说明 系统环境: win10 64位 Qt环境: Qt-lib 5.6.0 QCreat0r 3.6.11. 使用.rc文件1.1 在工程项目下创建 .rc 文件例如 version.rc:# if defined(UNDER_CE)# include &amp;lt;winbase.h&amp;gt;#...",
  "url"      : "/blog/2016/07/11/Qt%E7%BB%99%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF.html"
},{
  "title"    : "Linux配置秘钥登录ssh",
  "content"	 : "作者: aodaoliang原文: https://hyjk2000.github.io/2012/03/16/how-to-set-up-ssh-keys/时间: 2016-6-1版本: 0.0.1邮箱: daodaoliang@yeah.net我们一般使用 PuTTY 等 SSH 客户端来远程管理 Linux 服务器。但是，一般的密码方式登录，容易有密码被暴力破解的问题。所以，一般我们会将 SSH 的端口设置为默认的 22 以外的端口，或者禁用 root 账户登录。其实，有一个更好的办法来保证安全，而且让你可以放心地用 root 账户从远程登录——那就是通过密钥方式登录。密钥形式登录的原理是：利用密钥生成器制作一对密钥——一只公钥和一只私钥。将公钥添加到服务器的某个账户上，然后在客户端利用私钥即可完成认证并登录。这样一来，没有私钥，任何人都无法通过...",
  "url"      : "/blog/2016/06/01/Linux%E9%85%8D%E7%BD%AE%E7%A7%98%E9%92%A5%E7%99%BB%E5%BD%95ssh.html"
},{
  "title"    : "iptables禁用IP",
  "content"	 : "作者: daodaoliang时间: 2016-5-23版本: V0.0.1邮箱: daodaoliang@yeah.net0x01 确保服务启动 service iptables status /etc/init.d/iptables stop /etc/init.d/iptables start0x02 禁用IP禁用单个IP: iptables -I INPUT -s 114.113.112.111 -j...",
  "url"      : "/blog/2016/05/23/iptables%E7%A6%81%E7%94%A8IP.html"
},{
  "title"    : "日常linux命令之iftop",
  "content"	 : "作者: daodaoliang时间: 2016年5月23日版本: v0.0.1邮箱: daodaoliang@yeah.net日常用的网络流量查看工具为 iftop， 但是他仅仅只能简单的查看网络的流量情况，若是想要查看某个链接的流量情况就比较困难了，因此再次推荐iftop 这个工具0x01 安装 iftop我是官方网站编译安装iftop示例: # centos yum install flex byacc libpcap ncurses ncurses-devel libpcap-devel...",
  "url"      : "/blog/2016/05/23/%E6%97%A5%E5%B8%B8linux%E5%91%BD%E4%BB%A4%E4%B9%8Biftop.html"
},{
  "title"    : "mysql权限说明",
  "content"	 : "作者：daodaoliang时间：2016年5月18日版本：0.0.1邮箱：daodaoliang@yeah.net官网相关文档1.mysql 权限概述mysql允许以下几种类别的权限操作： 管理员权限，使用户能够管理mysql服务器的相关操作，这些权限都是全局的因为并不针对指定数据库做权限； 数据库权限，可以管理数据库以及包含在数据库里面的对象内容，可以对特定数据库，也可以对全部数据库进行权限操作； 数据库对象权限例如数据表、索引、视图和存储过程中，可以管理指定数据库的指定对象，也可以管理指定数据库的所有对象，也可以管理所有数据库的所有对象；mysql 和权限相关的信息都存储在mysql数据库里面的 user 、 db、 tables_priv 、 columns_priv 和 procs_priv , mysql 数据库在启动时或者reload时都会把权限内容读取到内存中；2.mysql 权限列表 权限名字 权限表中列的名字...",
  "url"      : "/blog/2016/05/18/mysql%E6%9D%83%E9%99%90%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "python 在 windows 下的服务开发",
  "content"	 : "作者：daodaoliang版本：0.0.1邮箱：daodaoliang@yeah.net[TOC]离线版本文档1 开发环境的准备 首先要正确的安装 python 请点击我完成所需进行安装； 然后安装 pywin32 请点击我完成所需安装； 最后安装 py2exe 请点击我 完成所需安装；完成上述操作后基本上就完成了服务环境的搭建了，接下来就是编写服务程序并打包发布了；2. 项目工程文件布局 3. 服务文件源码import sysimport win32serviceimport win32eventimport win32serviceutilimport servicemanagerimport...",
  "url"      : "/blog/2016/05/11/python%E5%9C%A8windows%E4%B8%8B%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91.html"
},{
  "title"    : "josn 和 jsonp (转载)",
  "content"	 : "原文在这里, 为了自己温习方面，特地转载；1. 前言：说到AJAX就会不可避免的面临两个问题，第一个是AJAX以何种格式来交换数据？第二个是跨域的需求如何解决？这两个问题目前都有不同的解决方案，比如数据可以用自定义字符串或者用XML来描述，跨域可以通过服务器端代理来解决。但到目前为止最被推崇或者说首选的方案还是用JSON来传数据，靠JSONP来跨域。而这就是本文将要讲述的内容。JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿：JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。我们拿最近比较火的谍战片来打个比方，JSON是地下党们用来书写和交换情报的“暗号”，而JSONP则是把用暗号书写的情报传递给自己同志时使用的接头方式。看到没？一个是描述信息的格式，一个是信息传递双方约定的方法。既然随便聊聊，那我们就不再采用教条的方式来讲述，而是把关注重心放在帮助开发人员理解是否应当选择使用以及如何使用上。2. 什么是JSON？前面简单说了一下，JSON是一种基于文本的数据交换方式，或者叫做数据描述格式，你是否该选用他首先肯定要关注它所拥有的优点。2.1 JSON的优点： 基于纯文本，跨平台传递极其简单； Javascript原生支持，后台语言几乎全部支持； 轻量级数据格式，占用字符数量极少，特别适合互联网传递； 可读性较强，虽然比不上XML那么一目了然，但在合理的依次缩进之后还是很容易识别的； 容易编写和解析，当然前提是你要知道数据结构； JSON的缺点当然也有，但在作者看来实在是无关紧要的东西，所以不再单独说明。2.2 JSON的格式或者叫规则：JSON能够以非常简单的方式来描述数据结构，XML能做的它都能做，因此在跨平台方面两者完全不分伯仲。 JSON只有两种数据类型描述符，大括号{}和方括号[]，其余英文冒号:是映射符，英文逗号,是分隔符，英文双引号”“是定义符。 大括号{}用来描述一组“不同类型的无序键值对集合”（每个键值对可以理解为OOP的属性描述），方括号[]用来描述一组“相同类型的有序数据集合”（可对应OOP的数组）。 上述两种集合中若有多个子项，则通过英文逗号,进行分隔。 键值对以英文冒号:进行分隔，并且建议键名都加上英文双引号”“，以便于不同语言的解析。 JSON内部常用数据类型无非就是字符串、数字、布尔、日期、null 这么几个，字符串必须用双引号引起来，其余的都不用，日期类型比较特殊，这里就不展开讲述了，只是建议如果客户端没有按日期排序功能需求的话，那么把日期时间直接作为字符串传递就好，可以省去很多麻烦。 JSON实例：// 描述一个人var...",
  "url"      : "/blog/2016/03/14/json%E5%92%8Cjsonp.html"
},{
  "title"    : "centos 6.5 升级git",
  "content"	 : "作者: daodaoliang@yeah.net版本: v 0.0.2日期: 2017-03-14CentOS 6.5 的系统默认的git 版本为1.7.1 有些功能该版本是不提供支持的，比如https登陆认证的功能，而我恰巧比较喜欢该功能，所以只能升级git版本；1. 安装环境准备 yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc yum install...",
  "url"      : "/blog/2016/03/14/CentOS6.5%E5%8D%87%E7%BA%A7git.html"
},{
  "title"    : "python 库学习之 itsdangerous",
  "content"	 : "这是原始主页有时候你想向一个不可信的环境发送数据，但是如何安全的完成这个任务呢？诀窍就是引入签名！使用只有你自己知道的秘钥进行加密，并把加密后的数据发给别人处理，当你取回数据时，你就可以确保没人篡改过这份数据；虽然接受者可以解密你的数据看看里面封装的是什么内容，但他们没法修改你的内容，除非他们知道你的私钥，因此你只要保管好你的秘钥，同时使用复杂的秘钥就万事大吉了；itsdangerous内部默认使用了HMAC和SHA1来签名，基于 Django 签名模块。它也支持JSON Web 签名 (JWS)。这个库采用BSD协议，由Armin Ronacher编写，而大部分设计与实现的版权归Simon Willison和其他的把这个库变为现实的Django爱好者们；1. 安装你可以从 PyPI 上直接安装这个库： pip install itsdangerous适用案例： 在取消订阅某个通讯时，你可以在URL里序列化并且签名一个用户的ID。这种情况下你不需要生成一个一次性的token并把它们存到数据库中, 同样适用于一些激活链接等类似的情景下； 被签名的对象可以被保存在例如 cookie 等不可信来源，这意味着你不需要在服务端保存 session...",
  "url"      : "/blog/2016/03/14/python%E5%BA%93%E5%AD%A6%E4%B9%A0%E4%B9%8Bitsdangerous.html"
},{
  "title"    : "python 作用域学习记录",
  "content"	 : "0x01 python作用域说明Python的作用域一共有4中，分别是： L (local) 局部作用域，需注意的是函数的局部命名空间是一个作用域，而类的局部命名空间不是作用域; E (Enclosing) 闭包函数的作用域; G (Global) 全局作用域; B (Built-in) 内建作用域,Python 解释器启动时自动载入__built__模块后所形成的名字空间；诸如 str/list/dict…等内置对象的名称就处于这里;python 查找对象的顺序都是从当前层次开始依据 L -&amp;gt; E...",
  "url"      : "/blog/2016/03/11/python%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html"
},{
  "title"    : "linux下计划任务学习记录",
  "content"	 : "0x01 计划任务简介linux 中计划任务主要分为”循环执行”和”只执行一次”两种，分别对应的时 crond 服务 和 atd 服务；0x02 只执行一次的计划任务0x02.1 atd 服务说明atd 服务会轮训计划任务的文件，也就是我们用at 或者 batch 命令下达的任务，都会以文件的形式存储在系统中，其中：在ubuntu系统下存在： /var/spool/cron/atjobs /var/spool/cron/atspool在Centos系统下存在： /var/spool/at/PS: 若是没有安装请用对应系统地包管理器进行安装0x02.2 atd...",
  "url"      : "/blog/2016/03/10/linux%E4%B8%8B%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95.html"
},{
  "title"    : "linux下用logroate进行日志切割",
  "content"	 : "TOC0x01 简介官网介绍请看这里The logrotate utility is designed to simplify the administration of log files on a system which generates a lot...",
  "url"      : "/blog/2016/03/09/linux%E4%B8%8B%E5%88%A9%E7%94%A8logroate%E8%BF%9B%E8%A1%8C%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2.html"
},{
  "title"    : "linux下进程后台运行方法",
  "content"	 : "本文绝大部分都是摘抄自这里，我在这里做记录仅仅为了自己以后查阅的方便。1. nohupnohup 的作用就是让提交的命令忽略hangup信号，nohup 命令的帮助信息：用法：nohup 命令 [参数]...　或：nohup 选项忽略挂起信号运行指定的命令。 --help显示此帮助信息并退出 --version显示版本信息并退出If standard input is a terminal, redirect it from /dev/null.If standard output...",
  "url"      : "/blog/2016/01/25/linux%E8%BF%9B%E7%A8%8B%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E6%96%B9%E6%B3%95.html"
},{
  "title"    : "mysql全文索引简介",
  "content"	 : "工具安装本文所介绍的全文索引是基于mysql5.7版本的，官方相关文档在这里,本文也只是在文档和网上其他资料的基础上进行翻译整理。语法:match (col1,col2,...) against (expr [search_modifier])search_modifier:{in natural language mode| in natural language mode with query expansion| in boolean mode| with query...",
  "url"      : "/blog/2016/01/14/mysql%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E7%AE%80%E4%BB%8B.html"
},{
  "title"    : "linux下包管理说明",
  "content"	 : "主要的包管理家族 包管理系统 发行版(部分列表) Debian Style(.deb) Debian, Ubuntu, Xandros, Linspire Red Hat Style(.rpm) Fedora,CentOS,Red Hat Enterprise Linux, OpenSUSE, Mandriva, PCLinuxOS 1.背景知识科普1.1...",
  "url"      : "/blog/2016/01/12/linux%E5%B9%B3%E5%8F%B0%E4%B8%8B%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "CentOS6.5配置防火墙",
  "content"	 : "检查iptables状态检查服务状态: $ service iptables status iptables: Firewall is not running.上面的状态说明iptables服务是没有被安装的,进行iptables的安装: $ yum install -y iptables启动iptables: service iptables start查看当前iptables的配置: $ iptables...",
  "url"      : "/blog/2016/01/06/CentOS6.5%E9%85%8D%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99.html"
},{
  "title"    : "linux下netcat命令中无效参数e的解决方案",
  "content"	 : "错误信息如下:nc: invalid option — ‘e’This is nc from the netcat-openbsd package. An alternative nc is availablein the netcat-traditional package.修复方案如下： 在终端执行：...",
  "url"      : "/blog/2015/12/29/netcat%E5%91%BD%E4%BB%A4%E6%97%A0%E6%95%88%E5%8F%82%E6%95%B0e%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"
},{
  "title"    : "日常linux命令之nc",
  "content"	 : "这是一篇我觉得很不错的文章，故而我进行了翻译，原文在这里通常被称为TCP/IP的　瑞士军刀，Netcat的是一种非常通用的Linux工具，它可以让用TCP/IP协议做任何操作。这是一个系统管理员在网络相关的故障排除和实验时最喜欢的工具之一。在本教程中，我分享了一些有用的netcat的例子，当然我所描述的例子的使用场景有限，如果你也是经常地使用netcat,随时分享你的使用技巧。注意：当你绑定nc到 “众所周知”的端口(0~1023)时你需要root权限，其他情况用普通用户权限即可。1. 测试远程主机的端口是否开放$ nc -vn 123.125.114.144 5000nc: connect to 123.125.114.144 5000 (tcp) failed: Connection refused$ nc -v 123.125.114.144 22Connection to...",
  "url"      : "/blog/2015/12/28/%E6%97%A5%E5%B8%B8linux%E5%91%BD%E4%BB%A4%E4%B9%8Bnc.html"
},{
  "title"    : "reStructuredText 的基本语法",
  "content"	 : "reStructuredText 官方网址, 打不开吧!!!!!! fuck GFW这里是Sphinx中关于reStructuredText的翻译，本文也是从里面挑拣自己平时回经常用到的语法进行示例化记录。以下内容纯属虚构，图片也是随手在知乎上巴拉的头像1.提示类信息.. note:: 我是note 信息.. attention:: 我是attention信息.. caution:: 我是caution信息.. warning:: 我是warning信息.. tip:: 我是tip信息.. important:: 我是important信息.. hint:: 我是hint信息.....",
  "url"      : "/blog/2015/12/22/reStructuredText%E6%96%87%E6%A1%A3.html"
},{
  "title"    : "gitflow分支管理模型(转载)",
  "content"	 : "重要的事情要加黑： 这里是原博客地址gitflow 知识介绍gitflow的分支类型： master分支（1个） develop分支（1个） feature分支。同时存在多个 release分支。同一时间只有1个，生命周期很短，只是为了发布。 hotfix分支。同一时间只有1个。生命周期较短，用了修复bug或小粒度修改发布。 在这个模型中，master和develop都具有象征意义。master分支上的代码总是稳定的（stable build），随时可以发布出去。develop上的代码总是从feature上合并过来的，可以进行Nightly Builds，但不直接在develop上进行开发。当develop上的feature足够多以至于可以进行新版本的发布时，可以创建release分支。release分支基于develop，进行很简单的修改后就被合并到master，并打上tag，表示可以发布了。紧接着release将被合并到develop；此时develop可能往前跑了一段，出现合并冲突，需要手工解决冲突后再次合并。这步完成后就删除release分支。当从已发布版本中发现bug要修复时，就应用到hotfix分支了。hotfix基于master分支，完成bug修复或紧急修改后，要merge回master，打上一个新的tag，并merge回develop，删除hotfix分支。由此可见release和hotfix的生命周期都较短，master/develop虽然总是存在但却不常使用。以上就是gitflow的基本概念了。下面是nvie（gitflow的提出者，一个荷兰人！） A successful Git branching model（发布于2010年月5日）一文的笔记。从右看起： 时间轴. feature（玫红）。主要是自己玩了，差不多的时候要合并回develop去。从不与master交互。 develop（黄色）。主要是和feature以及release交互。 release（绿色）。总是基于develop，最后又合并回develop。当然对应的tag跑到master这边去了。...",
  "url"      : "/blog/2015/11/05/gitflow%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9E%8B.html"
},{
  "title"    : "深入研究tornado框架---tornado入门",
  "content"	 : "",
  "url"      : "/blog/2015/11/04/%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6tornado%E6%A1%86%E6%9E%B6-tornado%E5%85%A5%E9%97%A8%E7%AF%87.html"
},{
  "title"    : "以正确的方式开源 Python 项目(转载)",
  "content"	 : "重要的事情要加黑: 原文地址大多数Python开发者至少都写过一个像工具、脚本、库或框架等对其他人也有用的工具。我写这篇文章的目的是让现有Python代码的开源过程尽可能清晰和无痛。我不是简单的指——“创建一个GitHub库，提交，在Reddit上发布，每天调用它”。在本文的结尾，你可以把现有的代码转换成一个能够鼓励他人使用和贡献的开源项目。然而每一个项目都是不同的，但其中将现有代码开源的流程对所有的Python项目都是类似的.1. 工具和概念 1.1. 项目布局(目录结构) 1.2. setuptools 和 setup.py文件 1.3. git 版本控制 1.4. github 项目管理 1.4.1 github issues的如下作用: 1.4.1.1 bug跟踪...",
  "url"      : "/blog/2015/11/04/%E4%BB%A5%E6%AD%A3%E7%A1%AE%E7%9A%84%E6%96%B9%E5%BC%8F%E5%BC%80%E6%BA%90Python%E9%A1%B9%E7%9B%AE.html"
},{
  "title"    : "centos 6.5 搭建ftp 服务器",
  "content"	 : "0x00 如何快速的搭建简易的资源发布站开启简易的python http服务器cd /home/your_pathpython -m SimpleHTTPServer 8000开启防火墙的对应端口vim /etc/sysconfig/iptables增加对应的端口就好0x01 知识储备FTP通道解释 FTP包含了两个通道，一个叫控制通道，一个叫数据通道； 控制通道：控制通道是和FTP服务器进行沟通的通道，连接FTP，发送FTP指令都是通过控制通道来完成的。 数据通道：数据通道是和FTP服务器进行文件传输或者列表的通道。 FTP协议中，控制连接均有客户端发起，而数据连接有两种工作方式：PORT方式和PASV方式FTP数据通道的主动被动方式 PORT模式(主动方式) FTP 客户端首先和FTP Server的TCP 21端口建立连接，通过这个通道发送命令，客户端需要接收数据的时候在这个通道上发送PORT命令。 PORT命令包含了客户端用什么端口(一个大于1024的端口)接收数据。在传送数据的时候，服务器端通过自己的TCP 20端口发送数据。...",
  "url"      : "/blog/2015/10/10/CentOS6.5%E6%90%AD%E5%BB%BAFTP%E6%9C%8D%E5%8A%A1%E5%99%A8.html"
},{
  "title"    : "后台开发语言比较",
  "content"	 : "",
  "url"      : "/blog/2015/10/09/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%E6%AF%94%E8%BE%83.html"
},{
  "title"    : "linux命令行艺术",
  "content"	 : "命令行的艺术 必读 基础 日常使用 文件及数据处理 系统调试 一行代码 冷门但有用 仅限 MacOS X 系统 更多资源 免责声明 授权条款熟练使用命令行是一种常常被忽视或被认为难以掌握的技能，但实际上，它可以提高你作为工程师的灵活性以及生产力。本文是一份我在 Linux 上工作时发现的一些关于命令行的使用的小技巧的摘要。有些小技巧是非常基础的，而另外一些则是相当复杂的甚至晦涩难懂的。这篇文章并不长，但当你能够熟练掌握这里列出的所有技巧时，你就学会了很多关于命令行的东西了。这里的大部分内容首次 出现于 Quora，但考虑到这里的人们都具有学习的天赋且乐于接受别人的建议，使用 Github...",
  "url"      : "/blog/2015/09/24/linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E8%89%BA%E6%9C%AF.html"
},{
  "title"    : "python装饰器学习(转载)",
  "content"	 : "这是转载原文在这里引言本文主要梳理了Python decorator的实现思路，解释了为什么Python decorator是现在这个样子。关于代理模式、装饰模式设计模式中经常听到的代理模式、装饰器模式，这两种叫法实际上是说的同一件事，只是侧重点不同而已。例如：(以Java为例)public class CountProxy implements Count { private CountImpl countImpl; public CountProxy(CountImpl countImpl){ countImpl = countImpl; } @Override public...",
  "url"      : "/blog/2015/09/09/python%E8%A3%85%E9%A5%B0%E5%99%A8%E5%AD%A6%E4%B9%A0(%E8%BD%AC%E8%BD%BD).html"
},{
  "title"    : "python提升效率(视频)",
  "content"	 : "",
  "url"      : "/blog/2015/09/09/python%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87(%E8%A7%86%E9%A2%91).html"
},{
  "title"    : "深入浅出RPC——深入篇(转载)",
  "content"	 : "本文转载自这里是原文《深入篇》我们主要围绕 RPC 的功能目标和实现考量去展开，一个基本的 RPC 框架应该提供什么功能，满足什么要求以及如何去实现它？RPC 功能目标RPC的主要功能呢个目标是让构建分布式计算更加容易，在提供强大的远程调用能力时不损失本地调用的语义简洁性。为实现该目标，RPC框架提供一种透明的调用机制让使用者不必显式的区分本地调用和远程调用，在前文《浅出篇》给出了一种时间结构，基于stub的是结构来实现，下面我们将细化stub结构的实现。RPC调用分类RPC调用分以下两种： 同步调用 客户方等待调用执行完成并返回结果 异步调用 客户调用后不用等待执行结果返回，但依然可以通过回调通知等方式获取返回结果，若客户方不关系调用返回结果，则变成单向异步调用，单向调用不用返回结果。 RPC结构拆解《浅出篇》给出了一个比较粗粒度的RPC实现概念结构，这里我们进一步细化它该由哪些组件构成，如下图所示：RPC服务方通过RpcServer导出远程接口方法，而客户方通过RpcClient去引入远程接口方法。客户方向调用本地方法一样去调用远程方法，RPC框架提供接口的代理实现，实际的调用委托给RpcProxy。代理封装调用信用信息将调用转交给RpcInvoker去实际执行，在客户端的RpcInvoker通过连接器RpcConnector去维持服务器端的通道RpcChannel，并使用RpcProtocol执行协议编码(encode)并将编码后的消息通过通道发给服务方。RPC服务方的RpcAcceptor去接受客户方的调用请求，同样使用RPCProtocol执行协议解码(decode)。解码后的信息传递给RPCProcessor去控制处理调用过程，最后在委托调用给RPCInvoker去实际执行并返回调用结果。RPC组件职责上面我们进一步拆解了RPC实现结构的哥哥组件部分，下面我们详细说明每个部分的职责： RPCServer 负责导出接口 RpcClient 负责导入接口 RpcProxy 远程接口代理实现 RpcInvoker 客户方实现：负责编码调用信息，并发送调用信息并等待调用返回。服务方实现：负责调用服务端接口的具体实现并返回调用结果。 RpcProtocol...",
  "url"      : "/blog/2015/08/27/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BARPC(%E6%B7%B1%E5%85%A5%E7%AF%87).html"
},{
  "title"    : "深入浅出RPC——浅出篇(转载)",
  "content"	 : "本文转载自这里是原文近几年的项目中，服务化和微服务化渐渐成为中大型分布式系统架构的主流方式，而 RPC 在其中扮演着关键的作用。 在平时的日常开发中我们都在隐式或显式的使用 RPC，一些刚入行的程序员会感觉 RPC 比较神秘，而一些有多年使用 RPC 经验的程序员虽然使用经验丰富，但有些对其原理也不甚了了。 缺乏对原理层面的理解，往往也会造成开发中的一些误用。本文分上下两篇《浅出篇》和《深入篇》，其目标就是想尝试深入浅出的分析下 RPC 本质，我总是这么认为理解了本质才能更好的应用。RPC是什么RPC全称是Remote Procedure Call是一种进程间通信方式。它允许程序调用另外一个地址空间（通常是共享网络的另一台机器）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论调用本地的还是远程的，本质上编写的调用代码基本相同。RPC起源RPC 这个概念术语在上世纪 80 年代由 Bruce Jay Nelson...",
  "url"      : "/blog/2015/08/27/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BARPC(%E6%B5%85%E5%87%BA%E7%AF%87).html"
},{
  "title"    : "pernoca toolkit 学习",
  "content"	 : "工具安装      官网链接    手册链接  整包下载链接:wget percona.com/get/percona-toolkit.tar.gzwget percona.com/get/percona-toolkit.rpmwget percona.com/get/percona-toolkit.deb单个工具下载链接:wget percona.com/get/TOOLTOOL 要改为下面的的工具的名字",
  "url"      : "/blog/2015/08/26/Pernoca-ToolKit%E5%AD%A6%E4%B9%A0.html"
},{
  "title"    : "python邮件发送",
  "content"	 : "python邮件发送1. 纯文本邮件#coding: utf-8import smtplibfrom email.mime.text import MIMETextfrom email.header import Headersender = &#39;××××××××××××××&#39;receiver = &#39;××××××××××××××&#39;subject = &#39;python email test&#39;smtpserver = &#39;smtp.yeah.net&#39;username...",
  "url"      : "/blog/2015/08/05/python%E9%82%AE%E4%BB%B6%E5%A4%84%E7%90%86.html"
},{
  "title"    : "CentOS6.5配置nginx+phpfpm",
  "content"	 : "nginx本身不能处理PHP，它只是个web服务器，当接收到请求后，如果是php请求，则发给php解释器处理，并把结果返回给客户端[TOC]nginx一般是把请求发fastcgi管理进程处理，fascgi管理进程选择cgi子进程处理结果并返回被nginx1. 编译安装php-fpm1.1 什么是PHP-FPM PHP-FPM是一个PHP FastCGI管理器，是只用于PHP的,下载地址：我是下载地址 PHP-FPM其实是PHP源代码的一个补丁，旨在将FastCGI进程管理整合进PHP包中。必须将它patch到你的PHP源代码中，在编译安装PHP后才可以使用。 新版PHP已经集成php-fpm了，不再是第三方的包了，推荐使用。PHP-FPM提供了更好的PHP进程管理方式，可以有效控制内存和进程、可以平滑重载PHP配置，比spawn-fcgi具有更多优点，所以被PHP官方收录了。在./configure的时候带 –enable-fpm参数即可开启PHP-FPM。 PS: PHP详细的安装配置选项地址:我是地址1.2 安装先环境准备在centos下执行yum -y install gcc automake autoconf libtool makeyum -y install...",
  "url"      : "/blog/2015/08/03/CentOS6.5%E9%85%8D%E7%BD%AEnginx+phpfpm.html"
},{
  "title"    : "Qt在Windows上的调试器安装与配置",
  "content"	 : "如果安装Qt时使用的是Visual Studio的预编译版，那么很有可能就会缺少调试器（Debugger），而使用MSVC的Qt对应的原生调试器是CDB（对应MinGW的Qt使用GDB调试器）。本文介绍如何下载安装CDB，并在Qt Creator配置之。示例环境：Windows 7 64bit + Visual Studio 2013 + Qt 5.5.0选择合适的Windows Driver Kit（WDK）CDB已经不再作为独立软件包，而是WDK中的一部分。虽然WDK是对应不同的Windows版本的，但是因为我们只需要CDB，而不开发驱动程序，基本上不用理会操作系统的要求，只需关注对应的Visual Studio版本即可。 WDK 7.1对应的是VS2010 WDK 8.0对应VS2012 WDK...",
  "url"      : "/blog/2015/07/30/Qt%E5%9C%A8Windows%E4%B8%8A%E7%9A%84%E8%B0%83%E8%AF%95%E5%99%A8%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.html"
},{
  "title"    : "mysql中create_database和create_schema的区别",
  "content"	 : "在使用MS SQL的时候，一般创建数据库我们都习惯于使用CREATE DATABASE 来完成，而使用CREATE SCHEMA来创建架构，但是在MySQL中，官方的中文文档在 CREATE DATABASE 语法一节中写了一句：也可以使用CREATE SCHEMA。那么CREATE SCHEMA和CREATE DATABASE在MySQL难道是一样的吗？MySQL 5.0官方的英文文档中有这么一句：CREATE DATABASE creates a database with the given name.To...",
  "url"      : "/blog/2015/07/27/mysql%E4%B8%ADcreate_database%E5%92%8Ccreate_schema%E7%9A%84%E5%8C%BA%E5%88%AB.html"
},{
  "title"    : "检查 MySQL 配置文件 my.cnf 是否有误的方法",
  "content"	 : "/usr/libexec/mysqld --help --verbose",
  "url"      : "/blog/2015/07/24/%E6%A3%80%E6%9F%A5MySQL%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E6%9C%89%E8%AF%AF%E7%9A%84%E6%96%B9%E6%B3%95.html"
},{
  "title"    : "mysql修改my.cnf的innodb_log_file_size后数据库启动失败的解决方法",
  "content"	 : "# 找到mysql的数据目录下的ib_logfile文件，删除，然后重启mysql# 数据文件在配置文件有配置，若是默认则在`/var/lib/mysql/`下面",
  "url"      : "/blog/2015/07/24/%E4%BF%AE%E6%94%B9innodb_log_file_size%E5%90%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%96%B9%E6%B3%95.html"
},{
  "title"    : "Python字符串相关处理",
  "content"	 : "",
  "url"      : "/blog/2015/07/06/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86.html"
},{
  "title"    : "版本控制Git常用命令图示",
  "content"	 : "本图示转载自：这里",
  "url"      : "/blog/2015/06/24/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6Git%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%9B%BE%E7%A4%BA.html"
},{
  "title"    : "Python在windows下的服务程序",
  "content"	 : "Python程序作为Windows服务启动，需要安装pywin32包。下载路径：我是下载路径import win32serviceutil import win32service import win32event class PythonService(win32serviceutil.ServiceFramework): &quot;&quot;&quot; Usage: &#39;PythonService.py [options] install|update|remove|start [...]|stop|restart [...]|debug [...]&#39; Options for &#39;install&#39; and...",
  "url"      : "/blog/2015/06/09/python%E5%9C%A8windows%E4%B8%8B%E7%9A%84%E6%9C%8D%E5%8A%A1.html"
},{
  "title"    : "mysql配置文件详解",
  "content"	 : "配置文件解析你也可以使用在线配置文件生成向导来完成这个工作4GB RAM, 只使用InnoDB, ACID, 少量的连接, 队列负载大[client]# mysql客户端链接数据库时默认的tcp端口号port = 3306# 为MySQL客户程序与服务器之间的本地通信指定一个套接字文件(Linux下默认是/var/lib/mysql/mysql.sock文件)socket = /var/lib/mysql/mysql.sock[mysqld]一般配置# mysql服务端监听默认的tcp端口号port = 3306 # 为MySQL客户程序与服务器之间的本地通信指定一个套接字文件(Linux下默认是/var/lib/mysql/mysql.sock文件)socket = /var/lib/mysql/mysql.sock# back_log...",
  "url"      : "/blog/2015/06/03/mysql%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3.html"
},{
  "title"    : "mysql中文乱码问题",
  "content"	 : "1. 查看当前编码 登陆mysql查看show variables like &#39;character%&#39;;显示如下：character_set_database和character_set_server的默认字符集还是latin12. 修改字符编码 在[mysqld]字段加入character-set-server=utf8：[mysqld]port = 3306socket = /var/lib/mysql/mysql.socketcharacter-set-server = utf-8 在[client]字段加入default-character-set=utf-8:[client]port = 3306socket = /var/lib/mysql/mysql.sockdefault-character-set=utf8 在[mysql]字段里加入default-character-set=utf8：[mysql]no-auto-rehashdefault-character-set=utf83....",
  "url"      : "/blog/2015/06/03/mysql%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.html"
},{
  "title"    : "linux脚本文件格式错误",
  "content"	 : "  /bin/sh^M:bad interpreter: No such file or directory      这个错误发生在你在windows下编写文件上传到linux服务器去运行的时候。错误原因：windows和linux的文件不一样。        解决办法:vi该文件 在命令模式下输入 :set ff=unix 回车        执行完成后输入:wq  ",
  "url"      : "/blog/2015/06/01/linux%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E9%94%99%E8%AF%AF.html"
},{
  "title"    : "linux目录结构",
  "content"	 : "在Linux文件系统中的每一个子目录都有特定的目的和用途。一般都是根据FHS标准定义一个正式的文件系统结构的，这个标准规定了哪些目录应该哪些作用FHS依据文件系统使用的频繁与否与是否允许使用者随意更动, 而将目录定义成为四种交互作用的形态,用表格来说有点像底下这样：   可分享的(shareable) 不可分享的(unshareable) 不变的(static) /usr (软件放置处) /etc (配置文件)   /opt (第三方协力软件) /boot (开机与核心档) 可变动的(variable) /var/mail (使用者邮件信箱) /var/run (程序相关)...",
  "url"      : "/blog/2015/05/27/linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html"
},{
  "title"    : "linux下SSH命令用法小结",
  "content"	 : "SSH为Secure Shell的缩写，由IETF的网络工作小组（Network Working Group）所制定；SSH为创建在应用层和传输层基础上的安全协议。在我们日常的工作中，经常涉及到维护服务器，那么为了方便操作，以及安全方面的考虑，通常我们都会在服务器上安装ssh服务端，这样，在我们自己的机器上通过ssh客户端工具连接到服务器，既方便又安全。下面说说ssh应用的基本功能。1、连接到远程主机：ssh name@remoteserver;或者ssh remoteserver -l name说明：以上两种方式都可以远程登录到远程主机，server代表远程主机，name为登录远程主机的用户名。2、连接到远程主机指定的端口：ssh name@remoteserver -p 2222;或者ssh remoteserver -l name –p 2222说明：p 参数指定端口号，通常在路由里做端口映射时，我们不会把22端口直接映射出去，而是转换成其他端口号，这时就需要使用-p 端口号命令格式。3、通过远程主机1跳到远程主机2：ssh -t remoteserver1...",
  "url"      : "/blog/2015/05/27/linux%E4%B8%8BSSH%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93.html"
},{
  "title"    : "linux系统信息命令",
  "content"	 : "linux系统信息 查看内核/操作系统/CPU信息uname -a 查看操作系统版本head -n 1 /etc/issue 查看CPU信息cat /proc/cpuinfo 查看计算机名hostname 列出所有PCI设备lspci -tv 列出所有USB设备lsusb -tv 列出加载的内核模块lsmod 查看环境变量env 显示机器的处理器架构(1)arch 显示机器的处理器架构(2)uname -m 显示正在使用的内核版本uname...",
  "url"      : "/blog/2015/05/19/linux%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E5%91%BD%E4%BB%A4.html"
},{
  "title"    : "远程开机包封装",
  "content"	 : "使用方法 同一局域网内的机器，只需指定目标主机的MAC地址，就令远程主机开机。 非同一局域网的情况下，除需指定目标主机的MAC地址，还需指定目标主机的地址。 示例： 同一局域网内的使用示例：./wake_on_lan.py -m 12-34-56-78-90-AB 非同一局域网的使用示例：./wake_on_lan.py -m 12-34-56-78-90-AB -a 8.8.8.8#coding=utf-8from optparse import OptionParserimport socketimport structdef wake(addr, mac): mac_data...",
  "url"      : "/blog/2015/05/19/Wake_on_lan%E8%BF%9C%E7%A8%8B%E5%BC%80%E6%9C%BA.html"
},{
  "title"    : "linux下mysql忘记root密码的处理方案",
  "content"	 : "准备工作 首先确认mysql数据库处于安全状态，因为在找回密码的过程中，mysql处于没有密码保护的状态，任何人都可以连接数据库并且对数据库作出修改，建议断开对外端口，或者断开对外网线，最保险的办法就是断开对外网络同时登录服务器通过控制台操作 修改mysql的登录设置 修改配置文件 vi /etc/my.cnf 在mysqld标签下加入下面这句 skip-grant-tables 重新启动mysqld /etc/init.d/mysqld restart 登录并修改mysql密码 /usr/bin/mysql use mysql; update user set password=PASSWORD(&#39;p12#456&#39;) where...",
  "url"      : "/blog/2015/05/17/linux%E4%B8%8Bmysql%E5%BF%98%E8%AE%B0root%E5%AF%86%E7%A0%81%E5%A4%84%E7%90%86%E6%96%B9%E6%A1%88.html"
},{
  "title"    : "CentOS 6.5通过源码安装nginx",
  "content"	 : "1.下载nginx源码 官方网址：http://nginx.org/en/download.htmlcd /tmp# 文章写作时最新的稳定版本为1.8.0wget http://nginx.org/download/nginx-1.8.0.tar.gz 解压源码包tar -zxvf nginx-1.8.0.tar.gz2.编译安装nginx 安装依赖包文件yum install openssl-devel pcre-devel zlib-develpcre可用包 配置nginx编译选项cd /tmp/nginx-1.8.0./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log...",
  "url"      : "/blog/2015/05/12/CentOS6.5%E9%80%9A%E8%BF%87%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85nginx.html"
},{
  "title"    : "CentOS 6.5安装配置MySQL数据库",
  "content"	 : "1.卸载原有数据库 1.1 查询是否安装了数据库 rpm -qa | grep mysql 1.2卸载mysql数据库 # 普通删除模式rpm -e mysql or# 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除rpm -e --nodeps mysql 1.3 检查是否卸载成功...",
  "url"      : "/blog/2015/05/04/CentOS6.5%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEmysql%E6%95%B0%E6%8D%AE%E5%BA%93.html"
},{
  "title"    : "windows64位python注册问题",
  "content"	 : "Windows 7 64位下安装了 Python 的64位安装包，再安装其他预编译的Library就会有找不到Python的错误。 应该是有些Key没有加入到注册表中，需要运行下面的脚本修正。## script to register Python 2.0 or later for use with win32all# and other extensions...",
  "url"      : "/blog/2015/04/20/windows64%E4%BD%8Dpython%E6%B3%A8%E5%86%8C%E9%97%AE%E9%A2%98.html"
},{
  "title"    : "redis配置文件说明",
  "content"	 : "redis inforedis-cliauth 密码info [server] 记录了 Redis 服务器的信息 名字 说明 redis_version redis服务器版本 redis_git_sha1 Git SHA1 redis_git_dirty Git dirty flag os Redis...",
  "url"      : "/blog/2015/04/15/redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "刀刀亮的书单",
  "content"	 : "      1.《深入理解计算机系统》        2.《代码整洁之道》        3.《高性能MySql》  ",
  "url"      : "/blog/2015/04/05/%E5%88%80%E5%88%80%E4%BA%AE%E7%9A%84%E4%B9%A6%E5%8D%95.html"
},{
  "title"    : "redis常用命令总结",
  "content"	 : "系统类命令： quit：关闭连接（connection） auth：简单密码认证 save：将数据同步保存到磁盘 bgsave：将数据异步保存到磁盘 lastsave：返回上次成功将数据保存到磁盘的Unix时戳 shundown：将数据同步保存到磁盘，然后关闭服务 info：提供服务器的信息和统计 monitor：实时转储收到的请求 slaveof：改变复制策略设置 config：在运行时配置Redis服务器对key操作的命令： exists(key)：确认一个key是否存在 del(key)：删除一个key type(key)：返回值的类型 keys(pattern)：返回满足给定pattern的所有key randomkey：随机返回key空间的一个 keyrename(oldname, newname)：重命名key dbsize：返回当前数据库中key的数目 expire：设定一个key的活动时间（s）...",
  "url"      : "/blog/2015/04/02/redis%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"
},{
  "title"    : "mysql远程表链接",
  "content"	 : "FEDERATED简介FEDERATED存储引擎是访问远程数据库中的表，在平时开发中可以用此特性来访问远程库中的参数表之类的，还是非常方便的。使用时直接在本地构建一个federated表来链接远程数据表，配置好之后本地数据库可以直接和远程数据表进行同步，实际上这个数据库并不是真实存放数据，所需要的数据都是存放在远程服务器上。配置条件 mysql版本需要5.1以上； 在安装是需要把federated引擎已经安装; 配置步骤 1.开启federated引擎；在mysql终端执行:show engines;若是引擎关闭则需要配置开启，方式如下；修改mysql的配置文件： 在my.ini中[mysqld]标签下下直接加上一行 federated重启数据库服务即可 2.建立远程表连接CREATE TABLE table_test ( id BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT, name varchar(255)...",
  "url"      : "/blog/2015/04/02/mysql%E8%BF%9C%E7%A8%8B%E8%A1%A8%E9%93%BE%E6%8E%A5.html"
},{
  "title"    : "ubuntu下redis环境搭建",
  "content"	 : "ubuntu下redis环境搭建1. 下载安装wget http://download.redis.io/redis-stable.tar.gz然后sudo tar -zxvf redis-stable.tar.gzcd redis-stablesudo makesudo make testsudo make install通常在make test时发现以下错误：You need tcl 8.5 or newer in order...",
  "url"      : "/blog/2015/03/24/ubuntu%E4%B8%8Bredis%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"
},{
  "title"    : "linux下mysql定时备份",
  "content"	 : "1. 在服务器上建立备份文件的存放文件夹sudo mkdir /usr/local/dbbackup2. 编写备份脚本vi dbbackup.sh 在里面编写如下内容mysqldump -uroot -p1W8a6N0g1Y3i3F1a1N99 cusflo | gzip &amp;gt; /usr/local/cusflo-dbback/cusflo`date +%Y-%m-%d_%H%M%S`.sql.gzcd /usr/local/cusflo-dbback/rm -rf `find . -name...",
  "url"      : "/blog/2015/03/24/linux%E4%B8%8B%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BDmysql%E6%95%B0%E6%8D%AE%E5%BA%93.html"
},{
  "title"    : "gcc常见编译错误以及解决方案",
  "content"	 : "1. gcc: error trying to exec ‘cc1plus’: execvp: 没有那个文件或目录 该错误原因一般为没有安装g++或者g++版本和Gcc版本不统一所致，解决方案如下：更新软件版本并安装g++sudo apt-get install gcc-c++sudo apt-get update2. configure: error: You need a...",
  "url"      : "/blog/2015/03/23/gcc%E5%B8%B8%E8%A7%81%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"
},{
  "title"    : "linux服务器监控psdash配置",
  "content"	 : "psdash是一款linux下的系统资源监控的web版本，和其相似的还有linux-dash.1.安装前的环境准备 安装python,我用的环境是python 2. 7. 9sudo apt-get install python-pipsudo pip install python-dev2.安装psdash 可以直接用pip进行安装sudo pip install psdash 或者用安装脚本sudo git clone https://github.com/daodaoliang/psdash.gitsudo cd...",
  "url"      : "/blog/2015/03/21/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%91%E6%8E%A7psdash%E9%85%8D%E7%BD%AE.html"
},{
  "title"    : "SSH免密码登陆",
  "content"	 : "前期准备 Server端需要安装并开启SSH服务 Client端需要支持ssh-keygen命令 确认两台机器能够连接到Internet1. 检测SSH安装是否成功ssh -V 若是不成功显示版本信息则需要按照平台的不同进行相关的SSH的安装。2. Client端产生密钥对在Client端执行ssh-keygen 执行过程中，它先要求你确认保存公钥的位置（默认为：.ssh/id_rsa），然后它会让你重复输入一个密码两次，如果不想在使用公钥的时候输入密码，可以留空，执行完毕后，就会生成数据Client端的一对密钥。 查看Client端的用户目录下～/.ssh，看有没有用 xxx_rsa 和 xxx_rsa.pub 来命名的一对文件，有 .pub 后缀的文件就是公钥，另一个文件则是密钥。 公钥是公开的，不需要保密，而私钥是由个人自己持有，并且必须妥善保管和注意保密。** 3. 将Client生成的公钥复制到Server端** 登陆到Server端查阅...",
  "url"      : "/blog/2015/03/19/%E4%BD%BF%E7%94%A8SSH%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E9%99%86.html"
},{
  "title"    : "少年行",
  "content"	 : "###少年行其一新丰美酒斗十千，咸阳游侠多少年。相逢意气为君饮，系马高楼垂柳边。其二出身仕汉羽林郎，初随骠骑战渔阳。孰知不向边庭苦，纵死犹闻侠骨香。其三一身能擘两雕弧，虏骑千重只似无。偏坐金鞍调白羽，纷纷射杀五单于。其四汉家君臣欢宴终，高议云台论战功。天子临轩赐侯印，将军佩出明光宫。",
  "url"      : "/blog/2015/02/10/%E5%B0%91%E5%B9%B4%E8%A1%8C.html"
},{
  "title"    : "linux安装脚本",
  "content"	 : "#!/bin/bash# user can config the following configs, then package.INSTALL=/usr/local/cusflo-serverok_msg() { echo -e &quot;${1}${POS}${BLACK}[${GREEN} OK ${BLACK}]&quot;}failed_msg() { echo -e &quot;${1}${POS}${BLACK}[${RED}FAILED${BLACK}]&quot;}# discover...",
  "url"      : "/blog/2015/02/05/%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99.html"
},{
  "title"    : "linux服务脚本编写",
  "content"	 : "#!/bin/bash### BEGIN INIT INFO# Provides: 应用程序开发者# RequiRED-Start: $all# RequiRED-Stop: $all# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description:...",
  "url"      : "/blog/2015/02/04/%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99.html"
},{
  "title"    : "Python包管理",
  "content"	 : "安装setuptoolslpython中的easy_install工具，类似于Php中的pear，或者Ruby中的gem，或者Perl中的cpanwget -q http://peak.telecommunity.com/dist/ez_setup.pypython ez_setup.py或者apt-get install python-setuptools安装pipeasy_install pip或者sudo apt-get python-pip或者    wget https://bootstrap.pypa.io/get-pip.py --no-check-certificate    python get-pip.py",
  "url"      : "/blog/2015/02/04/python%E7%AE%A1%E7%90%86%E5%8C%85%E5%AE%89%E8%A3%85.html"
},{
  "title"    : "Linux下ffmpeg安装与开发配置",
  "content"	 : "ffmpeg安装删除已安装的文件，避免冲突sudo apt-get remove ffmpeg x264sudo apt-get autoremove安装需要的支持sudo apt-get install make automake g++ bzip2 python unzip patch subversion ruby build-essential git-core...",
  "url"      : "/blog/2015/02/03/Linux%E4%B8%8Bffmpeg%E9%85%8D%E7%BD%AE.html"
},{
  "title"    : "Simple-RTMP-Server 服务器搭建",
  "content"	 : "Simple-RTMP-Server 服务器搭建1. 服务器镜像获取 github源码地址git clone https://github.com/winlinvip/simple-rtmp-server.git CSDN镜像地址git clone https://code.csdn.net/winlinvip/srs-csdn.git OSChina镜像git clone https://git.oschina.net/winlinvip/srs.oschina.git2. 关闭防火墙和selinux或者开放端口 关闭防火墙# disable the firewallsudo /etc/init.d/iptables stopsudo /sbin/chkconfig...",
  "url"      : "/blog/2015/02/03/SRS%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA.html"
},{
  "title"    : "P2P的NAT穿越方案",
  "content"	 : "NAT专题之P2P的NAT穿越方案1.P2P简介 P2P即点对点通信，或称为对等联网，与传统的服务器客户端模式有着明显的区别，传统的服务器客户端模型如图2所示。P2P这一术语在不同的上下文环境里可能有不同的内涵，它可以指一种通信模式、一种逻辑网络模型、一种技术、甚至一种理念。在P2P网络中如图1所示，所有通信节点的地位都是对等的，每个节点都扮演着客户机和服务器双重角色，节点之间通过直接通信实现文件信息、处理器运算能力、存储空间等资源的共享。P2P网络具有分散性、可扩展性、健壮性等特点，这使得P2P技术在信息共享、实时通信、协同工作、分布式计算、网络存储等领域都有广阔的应用; 图1 P2P结构模型 图2 CS模式2.NAT简介目前,IPV4地址资源的紧缺使得NAT技术获得了广泛的应用，NAT技术是一种把内部网络(简称内网)私有IP地址转换为外部网络(简称为外网)公共IP地址的技术，它使得一定范围内的多台主机志李永一个公共IP地址链接到外网，可以在很大成都上缓解公网IP地址紧缺的问题。3.NAT对P2P通信的影响NAT技术虽然在一定成都上解决了IPV4地址短缺的问题，在构建防火墙，保证网络安全方面都发挥了一定的作用，却破坏了端到段的网络通信，NAT阻碍朱姐进行p2p通信的主要原因时NAT不允许外网主机主动访问内网诸暨，因为NAT设备上没有先关转发表项，要在NAT网络环境中进行有效的p2p通信，就必须寻找相应的解决方案，本文就着重介绍几种常见的解决方案。4.p2p穿越NAT的几种方案4.1 反向链接技术　　当通信双方中一方位于NAT之后时，他们可以利用反向链接技术来进行p2p通信，图中的clientA(拥有内网地址10.0.0.1)位于NAT之后，它通过TCP端口1234连接到服务器(拥有外网IP地址)的TCP端口1235上,NAT设备(拥有外网地址:155.99.25.11)味这个链接重新分配了TCP端口62000，clientB(拥有外网IP地址138.76.29.7)叶通过TCP端口1234连接到服务器1235上，clientA和clientB从服务器除货值的对网的外网地址二元组{IP地址:端口号}分别为{138.76.29.7:1234}和{155.99.25.11:62000}.他们在各自的本地端口上进行侦听。　　由于clientB拥有外网IP地址，所以clientA可以直接通过TCP发起与clientB的链接，但如果clientB尝试通过TCP链接到clientA进行P2P通信，则会失败，原因是clientA位于NAT设备后，虽然clientB发出的TCP SYN请求能够到达NAT设备的端口62000，但NAT设备会拒绝这个链接请求，要想与clientA通信，clientB要通过服务器给clientA转发一个链接请求，反过来请求clientA连接到clientB(即进行反向链接),从而建立起他们之间的TCP链接。 4.2 UDP打洞技术　　如果两个客户端窦唯与NAT设备后面，想要进行P2P通信，那又该如何解决呢?UDP打洞技术就是为解决这个问题应运而生的，它能够通过中间服务器实现P2P客户端互联，该技术在在线游戏协议中已经的到了应用4.2.1集中服务器　　打洞技术嘉定客户端A和客户端B都可以与公网内的已知集中服务器建立UDP链接，一个客户端在集中服务器上登陆的时候，服务器记录下改客户端的两对地址二元组信息{IP地址:UDP端口}，一对是该客户端与集中服务器进行通信的自身的地址和端口号，另外一对是集中服务器记录下的由服务器观察到的改客户端实际与自己所使用的地址和端口号，我们可以把前一对地址二元组看作是客户端的内网地址和端口号，把后一对地址二元组看作是客户端的内网地址和端口号经过NAT转换后的外网地址和端口号，集中服务器可以从客户端的登录消息中的到客户端内网相关信息，还可以通过消息的IP头和UDP头得到改客户端的外网相关信息，如果该客户端不是位于NAT设备后面，那么采用上述方法得到的两对地址二元组信息是完全相同的。4.2.2建立p2p session假定客户端A要发起客户端B的直接链接，具体的打洞过程如下: 客户端A最初不知道如何向客户端B发起链接，于是客户端A向集中服务器发送消息，请求集中服务器帮助建立与客户端B的UDP链接。 集中服务器将含有客户端B的外网和内网地址二元组发送给客户端A，同时，集中服务器将包含将包含有客户端A的外网和内网地址二元组信息发送给客户端B，这样以来,客户端A与客户端B就都知道对方外网和内网的地址二元组信息了。 当客户端A收到有集中服务器发来的包含客户端B的外网和内网的地址二元组信息后，客户端A开始向客户端B的地址二元组发送UDP数据包，并且客户端A会自动锁定第一个给出相应的客户端B的地址二元组，同理，当客户端B收到由集中服务器发来的客户端A的地址二元组信息后，也会开始向客户端A的外网和内网的地址二元组发送UDP数据包，并且　自动锁定第一个得到的客户端A回应的二元组，由于客户端A与客户端B互相向对方发送UDP数据包的操作是异步的，所以客户端A和客户端B发送数据包的时间先后没有时序要求。下面来看下这三者之间时如何进行UDP打洞的,在这我们分三种具体情景来讨论： 两个客户端都唯一同一个NAT设备后面，即位于同一个内网中； 两个客户端分别位于不同的NAT设备后面，分属于不容的内网; 两个客户端位于两层NAT设备之后,通常最上层的NAT是由网络提供商提供的，第二层NAT时家用的NAT路由器之类的设备提供的；4.2.3 p2p的两个客户端位于同一个NAT设备后面首先假设两个客户端位于同一个NAT后面，并且位于内网，如图所示，客户端A与集中服务器建立UDP链接，经过NAT转换后，A的公网端口被映射为62000，客户端B同样与集中服务器建立了UDP链接,公网端口映射为62005;　　假设客户端A向通过集中服务器，发起对客户端B的链接，客户端A向集中服务器发出消息请求与客户端B进行链接，集中服务器将客户端B的外网地址二元组以及内网地址二元组发送给客户端A,同时把客户端A的相关二元组信息发给B，。客户端A和客户端B发往对方公网地址二元组兵一定会被对方收到，这取决于当前的NAT设备是否支持不同端口之间的UDP数据包能够到达，即Harrpin转换特性，无论如何客户端Ａ发往客户端B的内网地址二元组的UDP数据包一定可以到达，内网数据包不需要路由，且速度更快，客户端A与客户端B推荐采用内网地址二元组信息进行常规p2p通信。　　假定NAT设备支持Hairpin转换，具体的Hairpin转换详见其他文章，应用程序也应该忽略与内网地址二元组的链接，如果客户端A和客户端B采用外网的地址二元组作为p2p通信的链接，这势必会造成数据包无谓的经过NAT设备，这是一种对资源的浪费，就目前的网络情况而言，应用程序在”打洞”的时候，最好还是把外网和内网地址二元组都尝试一下，如果都能成功，有限以内网地址进行链接。4.2.4 P2P客户端位于不同NAT设备后面　　假定客户端A与客户端B在不容的NAT设备后面，分属于不同的内网，如图所示，客户端A与客户端B都经由个子的NAT设备与集中服务器建立了UDP链接，客户端A与客户端B的本地端口好均为4321，集中服务器的公网端口号为1234，在向外的回话中，客户端A的外网IP被映射为159.99.25.11，外网端口为62000，客户端B的外网IP被映射为138.76.29.7，外网端口为31000.　　如下图所示： 客户端A...",
  "url"      : "/blog/2015/02/02/p2p%E7%9A%84NAT%E7%A9%BF%E8%B6%8A%E6%96%B9%E6%A1%88.html"
},{
  "title"    : "crtmpserver配置文件说明",
  "content"	 : "配置文件说明配置文件实际上是一个Lua脚本，它包含至少一个configuration的对象，从而为程序提供灵活的扩展和定制功能。除了configuration对象外，还可以有函数，Lua库等。主结构configuration={ daemon=false, pathSeparator=&quot;/&quot;, logAppenders= { -- content removed for clarity }, applications= { -- content removed for clarity }} key...",
  "url"      : "/blog/2015/01/28/crtmpserver%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "CentOS6.5安装crtmpserver搭建RTMP流媒体服务器",
  "content"	 : "1. crtmpserver简介 支持推送给rtmp流的接受与播放器请求的分发； rtmp流媒体服务器树状网络集群的构建； 支持 iphone 和　android;PS:官网应用介绍2. crtmpserver流媒体服务器的搭建(centOS6.5)2.1 cmake的安装下载最新的cmakeyum install cmake2.2 openssl的安装wget -o openssl-0.9.8t.tar.gz http://www.openssl.org/source/openssl-0.9.8ze.tar.gzcd openssl-0.9.8t./configmake .make install2.3 crtmpserver的编译与安装svn co...",
  "url"      : "/blog/2015/01/28/CentOS6.5%E5%AE%89%E8%A3%85crtmpserver%E6%90%AD%E5%BB%BARTMP%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1.html"
},{
  "title"    : "2&gt;&amp;1详解",
  "content"	 : "Shell: /dev/null 2&amp;gt;&amp;amp;1详解可以将/dev/null看作”黑洞”. 它非常等价于一个只写文件. 所有写入它的内容都会永远丢失. 而尝试从它那儿读取内容则什么也读不到. 然而, /dev/null对命令行和脚本都非常的有用.用处: 禁止标准输出. 1 cat $filename &amp;gt;/dev/null # 文件内容丢失，而不会输出到标准输出. 禁止标准错误. 2&amp;gt;/dev/null 这样错误信息[标准错误]就被丢到太平洋去了.&amp;gt; 代表重定向到哪里，例如：echo “123”...",
  "url"      : "/blog/2015/01/28/shell%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91%E8%AF%A6%E8%A7%A3.html"
},{
  "title"    : "python CRC32",
  "content"	 : "python CRC32方法def _crc32(self, v): &quot;&quot;&quot; Generates the crc32 hash of the v. @return: str, the str value for the crc32...",
  "url"      : "/blog/2015/01/28/python_CRC32.html"
},{
  "title"    : "python 看门狗",
  "content"	 : "python看门狗# -*- coding: utf-8 -*-import timeimport osimport sysimport signalimport socket# set the default encoding to utf-8# reload sys model to...",
  "url"      : "/blog/2015/01/28/python%E7%9C%8B%E9%97%A8%E7%8B%97%E7%A8%8B%E5%BA%8F.html"
},{
  "title"    : "CentOS6.5安装DSS搭建RTSP流媒体服务器",
  "content"	 : "1. 下载Darwin Streaming Server v5.5.5 Linux安装包 下载 http://dss.macosforge.org/downloads/DarwinStreamingSrvr5.5.5-Linux.tar.gz，然后通过SFTP或者FTP上传到服务器上。 如果服务器可以上网，也可以直接用wget命令下载： wget http://dss.macosforge.org/downloads/DarwinStreamingSrvr5.5.5-Linux.tar.gz2. 解包DarwinStreamingSrvr5.5.5-Linux.tar.gz文件 执行解压命令tar -zxvf DarwinStreamingSrvr5.5.5-Linux.tar.gz3. 安装DSS cd到DarwinStreamingSrvrlinux-Linux目录cd DarwinStreamingSrvrlinux-Linux 安装Darwin Streaming...",
  "url"      : "/blog/2015/01/27/CentOS6.5%E5%AE%89%E8%A3%85DSS%E6%90%AD%E5%BB%BARTSP%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1.html"
},{
  "title"    : "netstat命令学习",
  "content"	 : "netstat 命令简介Netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。参数解析usage: netstat [-vWeenNcCF] [&amp;lt;Af&amp;gt;] -r netstat {-V|--version|-h|--help} netstat [-vWnNcaeol] [&amp;lt;Socket&amp;gt; ...] netstat...",
  "url"      : "/blog/2015/01/27/netstat%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0.html"
},{
  "title"    : "mysql insert into和replace into以及insert ignore的区别",
  "content"	 : "insert intoinsert into 表示插入数据，数据会检查主键(PrimaryKey),如果出现重复会报错；replace intoreplace into 表示插入替换数据，需求表中有PrimaryKey,或者Unique索引的话，如果数据库已经存在数据，则用新数据替换，如果没有数据效果跟insert into一样，replace语句会返回一个数，来指示受影响的行的数目，该数目时被删除和被插入的行数的和，如果对应一个单行replace该数为１，则一行被插入，同时没有行被删除，如果该数大于１，则在新行被插入前，有一个或者多个旧行被删除，如果表包含多个唯一索引，并且新行复制了在不同的唯一索引中的不同旧行的值，则有可能是一个单一行替换了多个旧行；insert ignore intoindert ignore表示，如果中已经存在相同的记录，则忽略当前新数据；示例：create table test_table (id int not null primary key,name varchar(20),age...",
  "url"      : "/blog/2015/01/22/mysql%E4%B8%89%E7%A7%8D%E6%8F%92%E5%85%A5%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%8C%BA%E5%88%AB.html"
},{
  "title"    : "mysql TIMESTAMPDIFF",
  "content"	 : "TIMESTAMPDIFF语法:TIMESTAMPDIFF(interval,datetime_expr1,datetime_expr2)说明:返回日期或者日期时间的表达式datetime_expr1和datetime_expr2之间的整数差,期结果的单位由interval参数给出,该参数必须时以下值的其中一个: FRAC_SECOND 毫秒 SECOND 秒 MINUTE 分钟 HOUR 小时 DAY 天 WEEK 星期 MONTH 月 QUARTER 季度 YEAR 年 TIMESTAMPADD语法：TIMESTAMPADD(interval,int_expr,datetime_expr)说明：将整型表达式inter_expr天价到日期或者日期时间表达式datetime＿expr中，式中的interval和上下文中列举的取值时一样的结果...",
  "url"      : "/blog/2015/01/22/Mysql-TIMESTAMPDIFF.html"
},{
  "title"    : "linux下定时任务",
  "content"	 : "crontab 定时任务命令crontab命令选项 -U指定一个用户 -l列出某个用户的任务计划 -r删除某个用户的计划 -e编辑某个用户的任务(/var/)cron文件语法 分 小时 日 月 星期 命令 0-59 0-23 1-12 0-6 command   特殊符号含义: “*”...",
  "url"      : "/blog/2015/01/22/linux%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1.html"
},{
  "title"    : "php mysql数据库处理",
  "content"	 : "PHP 数据库处理安装 首先安装mysql和php; 安装PHP5-mysql; 安装PHP5-gd;链接到一个mysql 数据库语法:mysql_connect(servername,username,password); 参数 描述 servername 可选,规定要链接服务器,默认是”localhost3306” username 可选,规定登陆所使用的用户名.默认值时拥有服务器进程的用户的名称 password 可选,规定登陆所用的密码,默认是”” 关闭链接用法:mysql_close(connecttion);示例:&amp;lt;?php$con=mysql_connect(&quot;localhost&quot;,&quot;daodaoliang&quot;,&quot;123&quot;);if (!$con){die(&quot;coould not connect:&quot;.mysql_error());}mysql_close($con);?&amp;gt;创建数据库和创建表示例:&amp;lt;?php$con = mysql_connect(&quot;localhost&quot;,&quot;daodaoliang&quot;,&quot;123&quot;);if...",
  "url"      : "/blog/2015/01/20/PHP-Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%84%E7%90%86.html"
},{
  "title"    : "php文件处理",
  "content"	 : "PHP 文件处理PHP Open File —- fopen()说明：fopen 的第一个参数包含被打开的文件名，第二个参数规定打开文件的模式，如果fopen()没能打开指定文件，下面的例子回升呈一段消息：&amp;lt;?php$myfile = fopen(&quot;daodaoliang.txt&quot;,&#39;r&#39;) or die(&quot;Unable to open file&quot;);fclose($myfile);?&amp;gt;文件打开模式如下： 模式 描述 r 打开文件为只读,文件指针在文件的开头开始 w 打开文件为只写,删除文件的内容或创建一个新的文件，如果他不存在．文件指针在文件的开头开始...",
  "url"      : "/blog/2015/01/19/PHP%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C.html"
},{
  "title"    : "php异常",
  "content"	 : "PHP 异常处理暂时没有用到,先不用更新了o(╯□╰)o(就是这么任性,你咬我啊~)",
  "url"      : "/blog/2015/01/19/PHP%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html"
},{
  "title"    : "php时间处理",
  "content"	 : "PHP 日期和时间PHP Date() 函数PHP Date()　函数把时间戳格式化为更易读的日期和时间．语法：date(format,timestamp); 参数 描述 format 必需，规定时间戳的格式 timestamp 可选，规定时间戳，默认是当前时间和日期 注释　时间戳时一种字符序列，他表示具体时间发生的日期和事件format d - 表示月里的某天(01-31) m - 表示月(01-12) Y -...",
  "url"      : "/blog/2015/01/17/PHP%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0.html"
},{
  "title"    : "php运算逻辑说明",
  "content"	 : "PHP 运算逻辑说明PHP if…elseif…else 语句示例说明:&amp;lt;?phpif(condition_001){语句;} elseif (condition_002){语句;} else {语句;}?&amp;gt;PHP Switch语句示例说明:&amp;lt;?phpswitch (expression){case label1:code to be executed if expression = label1;break;case label2:code to...",
  "url"      : "/blog/2015/01/16/PHP%E8%BF%90%E7%AE%97%E9%80%BB%E8%BE%91%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "php超全局变量",
  "content"	 : "PHP 全局变量-超全局变量PHP 中的许多预定义变量都是”超全局的”,这意味着他们在一个脚本的全部作用域都可用.在函数或方法中无需执行 global $variable,就可以访问他们.这些超全局变量是: $GLOBALS $_SERVER $_REQUEST $_POST $_GET $_FILES $_ENV $_COOKIE $_SESSION$GLOBAL —引用全局作用域中可用的全部变量$GLOBAL 这种全局变量用于在PHP脚本中的任意未知访问全局变量(从函数或方法中均可).PHP在名为$GLOBAL[index]的数组中存储了所有的全局变量,变量的名字就是数组的键.示例:&amp;lt;?php$x = 75;$y = 25;function...",
  "url"      : "/blog/2015/01/16/PHP%E8%B6%85%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F.html"
},{
  "title"    : "php表单处理",
  "content"	 : "表单处理一个简单的表单&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;form action=&quot;welcome.php&quot; method=&quot;post&quot;&amp;gt;Name: &amp;lt;input type=&quot;text&quot; name=&quot;name&quot;&amp;gt;&amp;lt;br&amp;gt;E-mail: &amp;lt;input type=&quot;text&quot; name=&quot;email&quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;input type=&quot;submit&quot;&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;welcome.php脚本源码&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;Welcom &amp;lt;?php echo $_POST[&#39;name&#39;];?&amp;gt;&amp;lt;br&amp;gt;Your email address is:&amp;lt;?php echo $_POST[&#39;email&#39;];?&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;GET vs POSTGET...",
  "url"      : "/blog/2015/01/16/PHP%E8%A1%A8%E5%8D%95%E5%A4%84%E7%90%86.html"
},{
  "title"    : "php数组",
  "content"	 : "在PHP 中创建数组在 PHP 中,array()函数用于创建数组:array();在 PHP 中,有三种数组类型: 索引数组-带有数字索引的数组 关联数组-带有指定键的是数组 多维数组-包含一个或多个数组的数组索引数组示例:&amp;lt;?php$cars=array(&quot;volvo&quot;,&quot;BMW&quot;,&quot;SAAB&quot;);?&amp;gt;或者$car[0]=&quot;volov&quot;;$car[2]=&quot;BMW&quot;;$car[3]=&quot;SAAB&quot;;关联数组示例:&amp;lt;?php$age=array(&quot;daodaolang&quot;=&amp;gt;&quot;10&quot;,&quot;wangxiaowei&quot;=&amp;gt;&quot;12&quot;);?&amp;gt;或者&amp;lt;?php$age[&quot;daodaoliang&quot;] = &quot;23&quot;;$age[&quot;wangxiaowei&quot;] = 22;?&amp;gt;遍历数组遍历索引数组&amp;lt;?php$test_array = array(&quot;daodaoliang&quot;,&quot;test&quot;,&quot;test2&quot;);foreach($test_array as $value){echo $value;}?&amp;gt;或&amp;lt;?php$test_array = array(&quot;test1&quot;,&quot;test2&quot;,&quot;test3&quot;);for($index=0;$index...",
  "url"      : "/blog/2015/01/16/PHP%E6%95%B0%E7%BB%84.html"
},{
  "title"    : "php运算符说明",
  "content"	 : "PHP 算数运算符 运算符 名称 例子 结果 + 加法 $x + $y $x 与 $y 求和 - 减法 $x - $y...",
  "url"      : "/blog/2015/01/15/PHP%E8%BF%90%E7%AE%97%E9%80%BB%E8%BE%91%E7%AC%A6%E5%8F%B7%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "php变量类型说明",
  "content"	 : "PHP 变量1.变量的相关规则 变量以$符号开头,其后是变量名称 变量名称必须以字母或者下划线开头,不能已数字开头 变量名称只能包含字母数字字符和下划线(A-z,0-9以及_) 变量名称对大小写敏感($x与$y是两个不同的变量)注意 PHP变量对大小写敏感,PHP保留字对大小写不敏感,PHP变量时一门弱类型的语言;2.PHP变量作用域在PHP中,可以在脚本的任意位置对变量进行声明,变量的作用域指的是变量能够被引用的那部分脚本,PHP有三种不容的变量作用域: local(局部) global(全局) static(静态)注意 默认创建的变量都是local 若是需要在函数内部访问全局的变量,则需要在函数内部声明global关键字,以此来使用函数外部的变量,所有的全局变量都放在$GLOBALS[index]数组中 函数在执行完后会删除变量,若是想要不删除变量则需要定义static关键字3.PHP数据类型 字符串 整数 浮点数 逻辑 数组 对象 NULL3.1字符串字符串是字符序列,比如”hello,world”,字符串可以是引号内的任何文本,您可以使用单引号或双引号.&amp;lt;?php$x...",
  "url"      : "/blog/2015/01/15/PHP%E5%8F%98%E9%87%8F%E8%AF%B4%E6%98%8E.html"
},{
  "title"    : "python twisted模块之安装部署",
  "content"	 : "Twisted 相关资源 官方下载网址Twisted 安装sudo apt-get install python-twisted服务端测试例子import sysfrom twisted.internet.protocol import ServerFactoryfrom twisted.protocols.basic import LineReceiverfrom twisted.python import logfrom twisted.internet import reactorclass...",
  "url"      : "/blog/2015/01/14/python%E7%9A%84Twisted%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E4%B9%8B%E5%AE%89%E8%A3%85.html"
},{
  "title"    : "mysql基础知识",
  "content"	 : "Mysql 数据类型1.整型 MySQL数据类型 含义(有符号) tinyint(m) 1个字节 范围(-128~127) smallint(m) 2个字节 范围(-32768~32767) mediumint(m) 3个字节 范围(-8388608~8388607) int(m) 4个字节 范围(-2147483648~2147483647) bigint(m) 8个字节 范围(+-9.22*10的18次方) 取值范围如果增加了unsigned,则最大值翻倍，如tinyint...",
  "url"      : "/blog/2015/01/13/Mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"
},{
  "title"    : "SQL语法学习",
  "content"	 : "1. TOP 子句SQLServer的例子select top number|percent column_name(s) from table_name;其中top number代表几条数据,top number percent 代表百分之几的数据;例如:前50%条SELECT TOP 50 PERCENT * FROM Persons;例如:前50条SELECT TOP 50...",
  "url"      : "/blog/2015/01/08/SQL%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0.html"
},{
  "title"    : "python 的日志logging模块学习",
  "content"	 : "1.简单的将日志打印到屏幕import logginglogging.debug(&#39;This is debug message&#39;)logging.info(&#39;This is info message&#39;)logging.warning(&#39;This is warning message&#39;)屏幕上打印: WARNING:root:This is warning message默认情况下，logging将日志打印到屏幕，日志级别为WARNING；日志级别大小关系为：CRITICAL &amp;gt; ERROR &amp;gt; WARNING &amp;gt;...",
  "url"      : "/blog/2014/12/22/python%E7%9A%84%E6%97%A5%E5%BF%97logging%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A0.html"
},{
  "title"    : "mysql用户账号操作",
  "content"	 : "作者: daodaoliang日期: 2016-5-18版本: 0.0.2邮箱: daodaoliang@yeah.net0x01 新建用户 登陆mysqlmysql -u root -p 创建用户mysql&amp;gt; insert into mysql.user(Host,User,Password) values(&quot;localhost&quot;,&quot;用户名&quot;,password(&quot;密码&quot;));ormysql&amp;gt; CREATE USER &#39;username&#39;@&#39;host&#39; IDENTIFIED BY...",
  "url"      : "/blog/2014/12/21/Mysql%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E6%93%8D%E4%BD%9C.html"
},{
  "title"    : "linux下进程的结束",
  "content"	 : "根据进程名杀死进程 方法一kill -9 $(ps -ef|grep 进程名关键字|gawk &#39;$0 !~/grep/ {print $2}&#39; |tr -s &#39;n&#39; &#39; &#39;)这个是利用管道和替换将 进程名对应的进程号提出来作为kill的参数。 方法二killall 进程关键字停止和重启有时候只想简单的停止和重启进程。如下：获取进程的PID或者PPID $(ps -ef|grep...",
  "url"      : "/blog/2014/12/21/%E6%A0%B9%E6%8D%AE%E8%BF%9B%E7%A8%8B%E5%90%8D%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8B.html"
},{
  "title"    : "linux软连接和硬链接的学习",
  "content"	 : "概述： linux的inode这里就不在重复赘述，若感兴趣可以自行google或者baidu,在linux系统中可以通过ln命令对一个已经存在的文件在建立一个新的链接，而不复制文件的内容，链接有软连接和硬链接之分。硬链接：硬链接指通过索引节点来进行的链接，源文件名和链接文件名都指向相同的物理地址，目录不能有硬链接，硬链接不能跨越文件系统(不能跨越不同的分区)文件再磁盘中只有一个拷贝，节省硬盘空间，防止文件被误删，之删除一个链接并不影响索引节点本身和其他连接，只有最后一个链接被删除以后文件数据块以及目录的链接才会被释放，才算是真正的被删除；软链接软链接是一种特殊的文件，作用可以理解为一个指针，作用在这个文件上的操作出了删除都直接转向实际指向文件，类似windows的快捷方式；ln命令详解 ln [options] source dist，其中 option 的格式为 :　　[-bdfinsvF] [-S backup-suffix] [-V {numbered,existing,simple}]　　[--help] [--version] [--]　　-f : 链结时先将与 dist 同档名的档案删除　　-d :...",
  "url"      : "/blog/2014/12/19/linux%E8%BD%AF%E8%BF%9E%E6%8E%A5%E5%92%8C%E7%A1%AC%E9%93%BE%E6%8E%A5%E5%AD%A6%E4%B9%A0.html"
},{
  "title"    : "InnoSetup提升系统管理员权限",
  "content"	 : "在[SetUp]段添加：  PrivilegesRequired=admin  找到INNO安装目录下的SetupLdr.e32文件(其实就是一个exe程序),将程序中的Manifest内的  &amp;lt;requestedExecutionLevel level=&quot;asInvoker&quot; uiAccess=&quot;false&quot;/&amp;gt;&amp;lt;/requestedPrivileges&amp;gt;改为  &amp;lt;requestedExecutionLevel level=&quot;requireAdministrator&quot; uiAccess=&quot;false&quot;/&amp;gt;&amp;lt;/requestedPrivileges&amp;gt;此处需要一个工具才能修改：Resource Hacker应用程序运行时申请管理员权限，如下图所示即可：或者在pro中添加：  QMAKE_LFLAGS += /MANIFESTUAC:&quot;level=&#39;requireAdministrator&#39;uiAccess=&#39;false&#39;&quot;  ",
  "url"      : "/blog/2014/11/26/InnoSetup%E6%8F%90%E5%8D%87%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90.html"
},{
  "title"    : "CentOS6.5升级Python版本",
  "content"	 : "查看服务器端的python 版本python -V显示：python 2.6.6下载Python-2.7.9wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz --no-check-certificate解压更改工作目录tar zxvf Python-2.7.9.tgzcd Python-2.7.9安装./configuremake allmake installmake cleanmake distclean查看版本信息/usr/local/bin/python2.7 -V建立软连接，是系统默认的python 指向python2.7mv /usr/bin/python /usr/bin/python2.6.6ln -s /usr/local/bin/python2.7 /usr/bin/python重新检验python...",
  "url"      : "/blog/2014/11/07/CentOS6.5%E5%8D%87%E7%BA%A7Python%E7%89%88%E6%9C%AC.html"
},{
  "title"    : "为人处世的细节(转自知乎)",
  "content"	 : "哪里拿的东西放回哪儿去。 不随地吐痰。打喷嚏要遮住口鼻。 不说话大声，不打电话大声，办公室接私人电话要出去。 不八卦，不对任何人妄加评论。 不问蠢问题，比如：你工资多少？你有女/男朋友吗？怎么还不结婚？你们xx那里一定很xx吧？ 不是很熟的人不要问私人电话号码/微信/邮箱等。 走路靠边走，给走的快的人让路。 走路不玩儿手机/看书。 上地铁/公交如果站着的话，而且人多，把背包摘下来放地上或者背在胸前。 办公室里手机静音。 培养环绕式目光，不横冲直撞，周围有人/车什么的要注意点。你说你因为走路玩儿手机而踩到别人了还不知道道歉算怎么回事？ 地铁先下后上，公交前门上后门下。 打伞走路的时候注意点儿周围，遇到身高差距大的尤其注意。 走路的时候突然要停下来的话注意缓冲，以免后面的人撞到你。 饭前便后要洗手，用香皂/洗手液。(这个我实在无力吐槽…) 学会收发邮件。标点，大小写什么的很重要。邮件内容按金字塔原则写，最重要的放前面。学会利用抄送功能，或者密送功能。检查邮件要频繁。 说话讲重点，礼貌用语可以有，但是不要说废话，比如：怎么说呢？其实吧，我是这样看的，事情是这样的，这个问题我是这样想的，以前遇到过类似的问题，那个时候…烦死！ 用！除！臭！剂！或！者！香！水！！很多人不知道自己身上有味道是吧？很多人以为只有狐臭才算味道是吧？ 别总麻烦别人，麻烦过之后要谢谢，并且学会自己做。并且，麻烦别人的时候别道德绑架，又撒娇又诉苦的，弄的别人不帮你好像是犯错误一样。没有谁一定要帮你。 学会合理委婉地拒绝别人。碍于面子大包大揽地帮忙对谁都不好。...",
  "url"      : "/blog/2014/11/07/%E4%B8%BA%E4%BA%BA%E5%A4%84%E4%B8%96%E7%9A%84%E7%BB%86%E8%8A%82.html"
},{
  "title"    : "mysql给用户赋予最高权限",
  "content"	 : "给予Root用户最高权限 mysql 1449 ： The user specified as a definer (‘root’@’%’) does not exist 解决方法mysql&amp;gt; grant all privileges on *.*...",
  "url"      : "/blog/2014/11/07/Mysql%E7%BB%99%E7%94%A8%E6%88%B7%E8%B5%8B%E4%BA%88%E6%9C%80%E9%AB%98%E6%9D%83%E9%99%90.html"
},{
  "title"    : "shell学习简介",
  "content"	 : "学习背景",
  "url"      : "/blog/2014/11/07/shell%E5%AD%A6%E4%B9%A0%E7%AE%80%E4%BB%8B.html"
},{
  "title"    : "学习计划表",
  "content"	 : "      思而不学则罔，学而不思则殆  说明 这里的计划表我已经单独开一个项目请移步这里",
  "url"      : "/blog/2014/11/04/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92%E8%A1%A8.html"
},{
  "title"    : "OpenWrt开发环境搭建(转载)",
  "content"	 : "原文在这里openWRT中文wiki第一部分：搭建编译环境 1、安装Ubuntu（编译需要Linux环境），到其官网下载，版本根据自己所需选择即可。可以选择安装到虚拟机或者物理机，图形化安装而且是中文版，连安装都搞不定的，可以关闭本页面了； 2、切记不要改动软件源，同时按住Ctrl + Alt + T，调出终端； 3、逐条输入下列命令（及时验证是否安装成功）：sudo apt-get install g++sudo apt-get install libncurses5-devsudo apt-get install zlib1g-devsudo apt-get install bisonsudo...",
  "url"      : "/blog/2014/10/31/OpenWrt%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"
},{
  "title"    : "Qt常见皮肤qss代码",
  "content"	 : "##QTabWidget 淡蓝色效果TabWidget(属性值lightblue) QTabWidget[lightblue = &quot;true&quot;] QTabBar::tab{ border-top:1px solid rgb(249,249,249);border-top-left-radius: 4px; border-top-right-radius: 4px;max-height:20px;min-height:20px;min-width:95px;font-family:microsoft yahei;color:rgb(50,50,50);font-size:13px;padding:0px 0px 0px 0px;border-image:url();margin: 0px;padding-bottom:15px;}QTabWidget[lightblue = &quot;true&quot;] QTabBar::tab:selected{border-left:1px...",
  "url"      : "/blog/2014/10/30/Qt%E5%B8%B8%E8%A7%81%E7%9A%AE%E8%82%A4%E7%9A%84QSS.html"
},{
  "title"    : "QT在release版本产生pdb文件",
  "content"	 : "##环境说明 QtCreator QtLibrary 编译器 Qt Creator 2.7.0 4.8.4-msvc msvc9.0(VS2008) ##背景说明 项目中需要对发布版本追踪崩溃问题，我们在项目中利用Qtbreakpoint来产生崩溃文件*.dump文件，但是若是想要对应的定位崩溃点还需要对应的 *.pdb 文件，但是在Qt的Release版本下默认是不产生*.pdb文件##如何配置 方案1 修改编译环境，对所有项目的release都产生*.pdb文件,步骤如下： 找到编译器对应的配置文件，如我的系统安装的是VS2008则我需要找Qt的安装目录/4.8.4/mkspecswin32-msvc2008qmake.conf 增加如下两行配置项到文件并保存 QMAKE_CFLAGS_RELEASE = -O2...",
  "url"      : "/blog/2014/10/30/Qt-msvc%E7%BC%96%E8%AF%91%E5%99%A8%E5%A6%82%E4%BD%95%E5%9C%A8Release%E4%B8%8B%E4%BA%A7%E7%94%9Fpdb%E6%96%87%E4%BB%B6.html"
},{
  "title"    : "软件加密模块的需求和设计",
  "content"	 : "本文档为软件加密注册模块简要的设计文档，主要是为了其他人更好的理解本模块的设计思想和实现流程，也为了自己在以后修改过中能够快速熟悉模块的设计,避繁就简,就没再严格按照概要设计模板来编写.1. 设计文档背景(需求)该文档的设计是依据如下的需求来进行的设计，主要是为了解决需求中的问题，若是超过该需求的问题，可能该模块就有些不在适宜。 软件只能在一台机器上运行一个实例； 软件的一个分发版本只能在一台机器上运行，拷贝到其他机器是不能运行的； 软件分发出去的版本默认都是演示版本，有功能限制、时间限制、使用次数限制，超过限制条件则提示用户注册使用； 用户注册后可以正常使用软件，但是一个注册码只能使这一个软件在这一台机器上使用； 模块可以在任意Qt开发的软件中简单集成，使其原程序增加软件注册的功能； 用户的注册过程需要用户把软件产生的一个加密后密钥文件发送给软件分发商，软件分发商通过软件注册机来产生对应的注册码然后分发给对应的用户使用; 2. 模块使用场景3. 模块基础划分 用户信息生成子模块 加解密子模块 UI提示接口子模块 注册码的产生和验证子模块 3.1 模块间关系 3.2 用户信息生成子模块 用户信息生成子模块用来收集用户的信息确保用户的全球唯一性，最终该文件是做为产生注册码的源文件，关于该模块的说明如下：...",
  "url"      : "/blog/2014/10/30/%E8%BD%AF%E4%BB%B6%E5%8A%A0%E5%AF%86%E6%A8%A1%E5%9D%97%E7%9A%84%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1.html"
},{
  "title"    : "工具项目之QDaoDaoLiang向导",
  "content"	 : "项目引导（QDaoDaoLiang） 平时由于项目需要，需要用到各种非原生Qt有的特性，这些特性有时需要重复劳动，有的可能毫无头绪，所以萌生根据实际需要进行抽象封装从而实现一套实用的组件库。QDaoDaoLiang的由来为本人网名，但愿组件库在发展的过程中会逐渐健壮，逐渐实用，本库遵循MIT开源协议，Enjoy it~开发环境构建说明 开发是在Windows下开发的项目 项目使用的DevKit为：Qt4.8.4(MSVC)+ Microsoft Visual C++ Compiler 9.0 + QCreator 2.7.0 文档使用MarkDown语言编写,编辑器使用MdCharm(感谢原作者提供方便的工具)项目结构说明项目进度 完成可移动的弹出框基础文件，可用来实现类似QQ新闻的右下角弹出和消失的效果； 完成自定义QLabel,在文字前方4个像素的位置画出红色星号，可用来实现表单的必填项的提示； 完成程序单例的集成； 完成程序崩溃的跟踪两套方案(minidump和基于google的breakpoint的crashdump)项目开发计划 开发适用于程序注册机制的验证库和注册机 集成ECharts实现JS图表与C++交互的数据展示库...",
  "url"      : "/blog/2014/10/29/%E5%88%80%E5%88%80%E4%BA%AE%E7%A7%81%E4%BA%BA%E5%B7%A5%E5%85%B7%E9%A1%B9%E7%9B%AE.html"
},{
  "title"    : "Ubuntu 14.04 搭建Jenkins",
  "content"	 : "本教程待本人搭建成功后更新",
  "url"      : "/blog/2014/10/24/Ubuntu14.04%E4%B8%8B%E6%90%AD%E5%BB%BAJenkins.html"
},{
  "title"    : "利用github搭建属于自己的博客",
  "content"	 : "##相关知识准备 熟悉基本的Git操作，windows下面掌握Git的图形化操作工具会更加方便，linux下我一直使用的是命令交互的方式如果正在看这篇博文的你有什么好的工具记得推荐我:）。 熟悉基本的MarkDown语法，windows下我推荐MdCharm，linux下我推荐Remarkable,Mac OS(我买不起……)就不推荐了； 熟悉jekyll基本框架原理，只需要知道大体的框架原理即可，能够在以后做定制和集成插件的时候能够得心应手，要是喜欢可以顺便看一看ROR框架蛮不错的； ##搭建步骤 注册一个GitHub账号,不再多说了，注册地址GitHub官网 安装Git,不在详细说过程,windows狂点下一步,linux一条命令搞定,具体细节请查看Git官网 登陆Github账户，创建一个博客空间，这一步其实更简单，只需要在Github上面创建一个名字为YourName.github.io其中YourName为你的GitHub的账号名，所以一个账号只能创建一个博客空间，至此你可以获取该项目到本地了; 创建完毕后你可以在YourName.github.io这个工程里面添加你的网站了,Github默认会在下面寻找index.html页面，你要是感兴趣他的为工作方式请移步Github Pages ; 当然了,如果你是自带光环的WEB前端工程师，你就可以不在看剩下的内容了，请享受你的私人网站吧，我这里要说的是采用第三方的模板Jekyll，没错就是采用别人的模板，什么是模板？请出门左转自行Google或者Baidu，比如说你觉得我这个模板比较中意，那就到我的Github主页，Clone我的博客项目然后本着尊重作者的意图，请一定要删除博主原有的个人配置信息和博文，然后就可以尽情的享受了； 若有任何问题,或者觉得步骤不够详细的可以随时给我发邮件,交流；##插件集成 该博客的模板最初并非本人原创，在此向原作者致敬,该模板采用jekyll框架，经过简单的个人定制而成，很值得称赞的是为了小白们的方便，里面集成了很多的第三方插件，比如评论系统多说,百度统计功能等等，通过简单地配置文件配置即可完成功能的集成，比如本博客的评论系统就是采用的多说插件，并且也添加了百度统计的功能,如下图: 多说盒子自定义样式如下： #ds-thread #ds-reset ul.ds-comments-tabs li.ds-tab...",
  "url"      : "/blog/2014/10/18/%E5%8D%9A%E5%AE%A2%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"
},{
  "title"    : "你好世界",
  "content"	 : "你好世界,这是N久之后我终于在开开停停N多博客之后打算在这里开启我的博客之旅,无它,唯记录我的人生以供将来的我自省.**print(&quot;Hello World!&quot;);",
  "url"      : "/blog/2014/10/18/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C.html"
}]